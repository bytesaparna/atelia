/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Cw721Contract, Cw721ContractInterface } from "../Cw721Contract";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "libraryAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ado_type",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.AdoTypeResponse",
        components: [
          {
            name: "ado_type",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ampReceive",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct AmpMsgLib.AmpPkt",
        components: [
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "funds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "ctx",
            type: "tuple",
            internalType: "struct AmpMsgLib.AmpPktCtx",
            components: [
              {
                name: "origin",
                type: "address",
                internalType: "address",
              },
              {
                name: "previous_sender",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "approve",
    inputs: [
      {
        name: "to",
        type: "string",
        internalType: "string",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "balanceOf",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getApproved",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "implementation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct Cw721Contract.Cw721InitParams",
        components: [
          {
            name: "minter",
            type: "address",
            internalType: "address",
          },
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "symbol",
            type: "string",
            internalType: "string",
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "isApprovedForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "mint",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "mint_with_uri",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "token_uri",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "minter",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Cw721Contract.MinterResponse",
        components: [
          {
            name: "minter",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "name",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ownerOf",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "safeTransferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "setApprovalForAll",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        internalType: "bool",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "supportsInterface",
    inputs: [
      {
        name: "interfaceId",
        type: "bytes4",
        internalType: "bytes4",
      },
    ],
    outputs: [
      {
        name: "",
        type: "bool",
        internalType: "bool",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "symbol",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenByIndex",
    inputs: [
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenOfOwnerByIndex",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "tokenURI",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "totalSupply",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "transfer",
    inputs: [
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "transferFrom",
    inputs: [
      {
        name: "from",
        type: "address",
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.VersionResponse",
        components: [
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AdoDefaultInitialized",
    inputs: [
      {
        name: "adoType",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "adoOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Approval",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "ApprovalForAll",
    inputs: [
      {
        name: "owner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "operator",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "approved",
        type: "bool",
        indexed: false,
        internalType: "bool",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Transfer",
    inputs: [
      {
        name: "from",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "to",
        type: "address",
        indexed: true,
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721EnumerableForbiddenBatchMint",
    inputs: [],
  },
  {
    type: "error",
    name: "ERC721IncorrectOwner",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InsufficientApproval",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidApprover",
    inputs: [
      {
        name: "approver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOperator",
    inputs: [
      {
        name: "operator",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidOwner",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidReceiver",
    inputs: [
      {
        name: "receiver",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721InvalidSender",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721NonexistentToken",
    inputs: [
      {
        name: "tokenId",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "ERC721OutOfBoundsIndex",
    inputs: [
      {
        name: "owner",
        type: "address",
        internalType: "address",
      },
      {
        name: "index",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x61012080604052346102665761002b90612fcd8038038091610021828561026a565b83398101906102a1565b60405161003960408261026a565b6005815264637737323160d81b60208201526040519061005a60408361026a565b60058252640302e312e360dc1b6020830152306080526040519061007f60608361026a565b602182527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020830152601d60fa1b604083015260206100fe604051936100c760408661026a565b60058552640302e302e360dc1b8386015261011060405195869384936327a0d66960e01b85526040600486015260448501906102c0565b838103600319016024850152906102c0565b03816001600160a01b0388165afa93841561025b5761014894610140935f9161022c575b5060a05260c0526102e4565b60e0526102e4565b610100525f516020612fad5f395f51905f525460ff8160401c1661021d576002600160401b03196001600160401b038216016101c7575b604051612c749081610339823960805181818161083401526109cb015260a051816113bc015260c05181505060e051818181610877015261149b015261010051816117bf0152f35b6001600160401b0319166001600160401b039081175f516020612fad5f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f61017f565b63f92ee8a960e01b5f5260045ffd5b61024e915060203d602011610254575b610246818361026a565b8101906102a1565b5f610134565b503d61023c565b6040513d5f823e3d90fd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761028d57604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261026657516001600160a01b03811681036102665790565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b601f81511161030f576020815191015160208210610300571790565b5f198260200360031b1b161790565b60405163305a27a960e01b8152602060048201529081906103349060248301906102c0565b0390fdfe60806040526004361015610015575b36611a7757005b5f3560e01c806301ffc9a7146101e45780630418ac42146101df578063045ffa79146101da57806306fdde03146101d557806307546172146101d0578063081812fc146101cb578063095ea7b3146101c657806318160ddd146101c157806323b872dd146101bc5780632f745c59146101b757806340c10f19146101b257806342842e0e146101ad5780634f1ef286146101a85780634f6ccce7146101a357806352d1902d1461019e57806354fd4d50146101995780635c60da1b146101945780636352211e1461018f57806370a082311461018a5780637c35a98b1461018557806395d89b4114610180578063a22cb4651461017b578063a9059cbb14610176578063ad3cb1cc14610171578063b88d4fde1461016c578063c87b56dd14610167578063e985e9c514610162578063ebebcab71461015d5763ff294f450361000e57611094565b610fd4565b610f8f565b610ec5565b610e69565b610e22565b610d5a565b610c9e565b610be1565b610aac565b610a7d565b610a5f565b610a2b565b610a10565b6109b9565b61095d565b6107f3565b6107b7565b61075c565b6106d6565b6106bf565b61066a565b610639565b6105ff565b6105b7565b6104c9565b61048d565b610394565b6101ff565b6001600160e01b03198116036101fb57565b5f80fd5b346101fb5760203660031901126101fb5760043561021c816101e9565b63ffffffff60e01b1663780e9d6360e01b8114908115610245575b506040519015158152602090f35b6380ac58cd60e01b811491508115610277575b8115610266575b505f610237565b6301ffc9a760e01b1490505f61025f565b635b5e139f60e01b81149150610258565b634e487b7160e01b5f52604160045260245ffd5b608081019081106001600160401b038211176102b757604052565b610288565b602081019081106001600160401b038211176102b757604052565b604081019081106001600160401b038211176102b757604052565b90601f801991011681019081106001600160401b038211176102b757604052565b604051906103226020836102f2565b565b6001600160a01b038116036101fb57565b6001600160401b0381116102b757601f01601f191660200190565b81601f820112156101fb5760208135910161036a82610335565b9261037860405194856102f2565b828452828201116101fb57815f92602092838601378301015290565b346101fb5760203660031901126101fb576004356001600160401b0381116101fb57608060031982360301126101fb576040516103d08161029c565b81600401356103de81610324565b815260248201356001600160401b0381116101fb576104039060043691850101610350565b602082015260448201356001600160401b0381116101fb5761044b9261043160649260043691840101610350565b6040840152013561044181610324565b6060820152611214565b005b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b604061048a92602083525191602080820152019061044d565b90565b346101fb575f3660031901126101fb576104b46104a861148d565b60405191829182610471565b0390f35b90602061048a92818152019061044d565b346101fb575f3660031901126101fb576040515f5f516020612b7f5f395f51905f52546104f5816114d1565b80845290600181169081156105935750600114610529575b6104b48361051d818503826102f2565b604051918291826104b8565b5f516020612b7f5f395f51905f525f9081527f37c58c799b6609234b945e882912ee9ad34948a1dfaa20a97485e1a7752bbf81939250905b8082106105795750909150810160200161051d61050d565b919260018160209254838588010152019101909291610561565b60ff191660208086019190915291151560051b8401909101915061051d905061050d565b346101fb575f3660031901126101fb575f6040516105d4816102bc565b5260206001600160a01b036105e7611cd5565b5416806040516105f6816102bc565b52604051908152f35b346101fb5760203660031901126101fb57602061062760043561062181611dc3565b50611df2565b6040516001600160a01b039091168152f35b346101fb5760403660031901126101fb5761044b60043561065981610324565b602435610664612565565b9161257f565b346101fb575f3660031901126101fb5760205f516020612bdf5f395f51905f5254604051908152f35b60609060031901126101fb576004356106ab81610324565b906024356106b881610324565b9060443590565b346101fb5761044b6106d036610693565b91611526565b346101fb5760403660031901126101fb576004356106f381610324565b60243590610700816117e3565b82101561073f576001600160a01b03165f9081525f516020612b5f5f395f51905f52602090815260408083209383529281529082902054915191825290f35b63295f44f760e21b5f5260018060a01b031660045260245260445ffd5b346101fb5760403660031901126101fb5761044b60043561077c81610324565b602435906107b26001600160a01b03604061079636611f97565b015151166001600160a01b036107aa611cd5565b541614611734565b612056565b346101fb5761044b6107c836610693565b90604051926107d86020856102f2565b5f84526107e6838383611526565b6107ee612565565b6122d6565b60403660031901126101fb5760043561080b81610324565b6024356001600160401b0381116101fb5761082a903690600401610350565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001630811490811561093b575b5061092c57813b156108f25761044b916108a961089b7f0000000000000000000000000000000000000000000000000000000000000000611d85565b6108a3612198565b90612ab3565b156108e4576108df6108d86108cc6108bf612a5c565b546001600160a01b031690565b6001600160a01b031690565b33146121bc565b6121dc565b6108df6108d86108cc61239c565b60405162461bcd60e51b81526020600482015260126024820152712727aa2fa4a6a82622a6a2a72a20aa24a7a760711b6044820152606490fd5b63703e46dd60e11b5f5260045ffd5b5f516020612bbf5f395f51905f52546001600160a01b0316141590505f61085f565b346101fb5760203660031901126101fb576004355f516020612bdf5f395f51905f52548110156109a3576109909061176d565b905460405160039290921b1c8152602090f35b63295f44f760e21b5f525f60045260245260445ffd5b346101fb575f3660031901126101fb577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316300361092c5760206040515f516020612bbf5f395f51905f528152f35b346101fb575f3660031901126101fb576104b46104a86117b1565b346101fb575f3660031901126101fb575f516020612bbf5f395f51905f52546040516001600160a01b039091168152602090f35b346101fb5760203660031901126101fb576020610627600435611dc3565b346101fb5760203660031901126101fb576020610aa4600435610a9f81610324565b6117e3565b604051908152f35b346101fb5760603660031901126101fb57600435610ac981610324565b6024356044356001600160401b0381116101fb5781610aef610b06923690600401610350565b936107b26001600160a01b03604061079636611f97565b6001610b10611cd5565b01905f5260205260405f2081516001600160401b0381116102b757610b3f81610b3984546114d1565b8461186e565b602092601f8211600114610b7e57610b6f929382915f92610b73575b50508160011b915f199060031b1c19161790565b9055005b015190505f80610b5b565b601f19821693610b91845f5260205f2090565b915f5b868110610bc95750836001959610610bb1575b505050811b019055005b01515f1960f88460031b161c191690555f8080610ba7565b91926020600181928685015181550194019201610b94565b346101fb575f3660031901126101fb576040515f5f516020612c1f5f395f51905f5254610c0d816114d1565b80845290600181169081156105935750600114610c34576104b48361051d818503826102f2565b5f516020612c1f5f395f51905f525f9081527ff4bad0a69248f59680a4f2b3000328cec71a413447c96781cfe5996daa8c456e939250905b808210610c845750909150810160200161051d61050d565b919260018160209254838588010152019101909291610c6c565b346101fb5760403660031901126101fb57600435610cbb81610324565b6024358015158091036101fb57610cd0612565565b6001600160a01b038316928315610d475781610d27602092610d127f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3195611650565b9060018060a01b03165f5260205260405f2090565b805460ff191660ff86161790556040519384526001600160a01b031692a3005b83630b61174360e31b5f5260045260245ffd5b346101fb5760403660031901126101fb57600435610d7781610324565b602435906001600160a01b036040610d8e36611f97565b015151169060405190610da26020836102f2565b5f82526001600160a01b03811615610e0f57610dbe8482611e2b565b6001600160a01b03811680610de05785637e27328960e01b5f5260045260245ffd5b938095939403610df7575061044b936107ee612565565b6364283d7b60e01b5f52610e0c908386611509565b5ffd5b633250574960e11b5f525f60045260245ffd5b346101fb575f3660031901126101fb576104b4604051610e436040826102f2565b60058152640352e302e360dc1b602082015260405191829160208352602083019061044d565b346101fb5760803660031901126101fb57600435610e8681610324565b60243590610e9382610324565b604435606435926001600160401b0384116101fb57610eb961044b943690600401610350565b926107e6838383611526565b346101fb5760203660031901126101fb576004356001610ee3611cd5565b01905f5260205260405f20604051905f90805490610f00826114d1565b8085529160018116908115610f685750600114610f28575b6104b48461051d818603826102f2565b5f90815260208120939250905b808210610f4e5750909150810160200161051d82610f18565b919260018160209254838588010152019101909291610f35565b60ff191660208087019190915292151560051b8501909201925061051d9150839050610f18565b346101fb5760403660031901126101fb57602060ff610fc8600435610fb381610324565b610d1260243591610fc383610324565b611650565b54166040519015158152f35b60203660031901126101fb576004356001600160401b0381116101fb578060040190608060031982360301126101fb576001600160a01b0361101461239c565b163303611062575f611041819261103b61102e86806119d0565b9190926044369101611a02565b916123b4565b602081519101305af4611052611a3c565b901561105a57005b602081519101fd5b60405162461bcd60e51b815260206004820152600a6024820152691393d517d2d15493915360b21b6044820152606490fd5b346101fb5760403660031901126101fb576004356001600160401b0381116101fb576110c4903690600401610350565b6024356110cf61239c565b6040908151906110df83836102f2565b600382526276667360e81b60208301526001600160a01b031680156111d55761112b929160209161110e610313565b9182528351808096819463fd7687ef60e01b835260048301610471565b03915afa9182156111d0575f9261119f575b506001600160a01b03821615611164575061044b9261115b91612456565b90610664612565565b5162461bcd60e51b8152602060048201526015602482015274159194c81859191c995cdcc81b9bdd08199bdd5b99605a1b6044820152606490fd5b6111c291925060203d6020116111c9575b6111ba81836102f2565b810190612441565b905f61113d565b503d6111b0565b6121d1565b825162461bcd60e51b815260206004820152601860248201527712d95c9b995b081859191c995cdcc81b9bdd08199bdd5b9960421b6044820152606490fd5b5f516020612bff5f395f51905f5254906001600160401b03611245604084901c60ff1615936001600160401b031690565b1680159081611338575b600114908161132e575b159081611325575b50611316576112a4908261129b60016001600160401b03195f516020612bff5f395f51905f525416175f516020612bff5f395f51905f5255565b6112f25761135f565b6112aa57565b5f516020612bff5f395f51905f52805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b5f516020612bff5f395f51905f52805460ff60401b1916600160401b17905561135f565b63f92ee8a960e01b5f5260045ffd5b9050155f611261565b303b159150611259565b83915061124f565b80546001600160a01b0319166001600160a01b03909216919091179055565b606081015160405161032292916001600160a01b031661137e826102bc565b8152611388612501565b6113e060018060a01b038251166040519063a74e5ca560e01b60208301526024820152602481526113ba6044826102f2565b7f0000000000000000000000000000000000000000000000000000000000000000612993565b506113e961148d565b519061141b6114126113f96117b1565b519260018060a01b039051169360405191828092611b60565b03902091611b72565b907f542e3741e19b27af9739b3c2fe67ae9fececcd04a33dcb48e178f0f664e502f65f80a46114536020820151604083015190611b88565b61145b612501565b611474611466611cd5565b91516001600160a01b031690565b90611340565b60405190611487826102bc565b60608252565b61149561147a565b506114bf7f0000000000000000000000000000000000000000000000000000000000000000611d85565b604051906114cc826102bc565b815290565b90600182811c921680156114ff575b60208310146114eb57565b634e487b7160e01b5f52602260045260245ffd5b91607f16916114e0565b6001600160a01b0390811660045260249190915216604452606490565b9091906001600160a01b0383168015610e0f57611541612565565b9361154b8461252c565b94846001600160a01b03821661163f575b6001600160a01b0387169390915083158015611621575b61157c84611688565b6001815401905561159584611590856116c0565b611340565b8282867fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a41561160b576115ca826126d2565b83036115fb575b50506001600160a01b038216036115e757505050565b6364283d7b60e01b5f52610e0c9350611509565b6116049161273f565b5f836115d1565b8381146115ca5761161c8288612645565b6115ca565b61162a8361262c565b61163388611688565b80545f19019055611573565b61164991876129b0565b5f8461155c565b6001600160a01b03165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793056020526040902090565b6001600160a01b03165f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab00793036020526040902090565b5f527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260405f2090565b5f527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260405f2090565b5f525f516020612b3f5f395f51905f5260205260405f2090565b1561173b57565b60405162461bcd60e51b815260206004820152600a6024820152692727aa2fa6a4a72a22a960b11b6044820152606490fd5b5f516020612bdf5f395f51905f525481101561179d575f516020612bdf5f395f51905f525f5260205f2001905f90565b634e487b7160e01b5f52603260045260245ffd5b6117b961147a565b506114bf7f0000000000000000000000000000000000000000000000000000000000000000611d85565b6001600160a01b038116156117ff576117fb90611688565b5490565b6322718ad960e21b5f525f60045260245ffd5b601f811161181e575050565b5f516020612b7f5f395f51905f525f5260205f20906020601f840160051c83019310611864575b601f0160051c01905b818110611859575050565b5f815560010161184e565b9091508190611845565b601f821161187b57505050565b5f5260205f20906020601f840160051c830193106118b3575b601f0160051c01905b8181106118a8575050565b5f815560010161189d565b9091508190611894565b9081516001600160401b0381116102b7576118fc816118e95f516020612c1f5f395f51905f52546114d1565b5f516020612c1f5f395f51905f5261186e565b602092601f821160011461193c5761192b929382915f92610b735750508160011b915f199060031b1c19161790565b5f516020612c1f5f395f51905f5255565b5f516020612c1f5f395f51905f525f52601f198216937ff4bad0a69248f59680a4f2b3000328cec71a413447c96781cfe5996daa8c456e915f5b8681106119b857508360019596106119a0575b505050811b015f516020612c1f5f395f51905f5255565b01515f1960f88460031b161c191690555f8080611989565b91926020600181928685015181550194019201611976565b903590601e19813603018212156101fb57018035906001600160401b0382116101fb576020019181360383136101fb57565b91908260409103126101fb57604051611a1a816102d7565b60208082948035611a2a81610324565b8452013591611a3883610324565b0152565b3d15611a66573d90611a4d82610335565b91611a5b60405193846102f2565b82523d5f602084013e565b606090565b90815f8237015f815290565b611a7f612939565b5f80356001600160e01b031916808252602092909252604090206001600160a01b03905416908115611b2a575b506001600160a01b03811615611ae7575f809160405180611acd8136611a6b565b03915af4611ad9611a3c565b901561105a57602081519101f35b60405162461bcd60e51b815260206004820152601b60248201527a111a585b5bdb990e88199d5b98dd1a5bdb881b9bdd08199bdd5b99602a1b6044820152606490fd5b611b5091506001611b39612939565b019063ffffffff60e01b165f5260205260405f2090565b546001600160a01b03165f611aac565b805191908290602001825e015f815290565b611b829060405191828092611b60565b03902090565b611b90612501565b611b98612501565b8051906001600160401b0382116102b757611bc982611bc45f516020612b7f5f395f51905f52546114d1565b611812565b602090601f8311600114611c10579180611bfc9261032295945f92610b735750508160011b915f199060031b1c19161790565b5f516020612b7f5f395f51905f52556118bd565b5f516020612b7f5f395f51905f525f52601f19831691907f37c58c799b6609234b945e882912ee9ad34948a1dfaa20a97485e1a7752bbf81925f5b818110611c97575091600193918561032297969410611c7f575b505050811b015f516020612b7f5f395f51905f52556118bd565b01515f1960f88460031b161c191690555f8080611c65565b92936020600181928786015181550195019301611c4b565b634e487b7160e01b5f52601160045260245ffd5b91908203918211611cd057565b611caf565b604051611ce36060826102f2565b602a81527f616e64726f6d6564612e73746f726167652e6e6f6e2d66756e6769626c652d746020820152696f6b656e2e637737323160b01b6040820152604051611d4381611d35602082018095611b60565b03601f1981018352826102f2565b5190205f198101908111611cd05760405190611d7a82611d6c6020820193849190602083019252565b03601f1981018452836102f2565b9051902060ff191690565b60ff811690601f8211611db45760405191611da16040846102f2565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b611dcc8161252c565b906001600160a01b03821615611de0575090565b637e27328960e01b5f5260045260245ffd5b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930460205260409020546001600160a01b031690565b611e348261252c565b916001600160a01b0383168015908115611ef0575b6001600160a01b038416918215908115611edb575b611e6b86611590876116c0565b8484847fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f80a415611ec557611ea0846126d2565b15611eb157505061048a915061279a565b03611ebc575b505090565b61048a9161273f565b818314611ea057611ed68487612645565b611ea0565b611ee486611688565b60018154019055611e5e565b611ef98361262c565b611f0285611688565b80545f19019055611e49565b60405190606082018281106001600160401b038211176102b757604052815f81525f60208201526040805191611f43836102d7565b5f83525f60208401520152565b9060248201809211611cd057565b91908201809211611cd057565b909392938483116101fb5784116101fb578101920390565b906040828203126101fb5761048a91611a02565b611f9f611f0e565b50611fa8612874565b9060248110612052576001600160a01b03611fd46003611fc6612a5c565b01546001600160a01b031690565b168015611eb75733036120525763beb2afbd60e01b3660031901356001600160e01b031916016120525736602319013561200d81611f50565b8210611eb757612046918161203761203061202a61203e95611f50565b84611cc3565b9182611f5e565b915f611f6b565b810190611f83565b60018252604082015290565b5090565b60405160209261206684836102f2565b5f82526001600160a01b0383168015610e0f576001600160a01b0361208b8386611e2b565b1661218557612098612565565b843b6120a7575b505050505050565b905f808798969794936120d060405197889687958694630a85bd0160e11b8652600486016122a5565b03925af15f9181612156575b506121155750506120eb611a3c565b805192908361211057633250574960e11b5f526001600160a01b03831660045260245ffd5b019050fd5b9092506001600160e01b03191663757a42ff60e11b0161213b57505f808080808061209f565b633250574960e11b5f526001600160a01b031660045260245ffd5b612177919250853d871161217e575b61216f81836102f2565b810190612290565b905f6120dc565b503d612165565b6339e3563760e11b5f525f60045260245ffd5b604051906121a76040836102f2565b60068252651ad95c9b995b60d21b6020830152565b156121c357565b6282b42960e81b5f5260045ffd5b6040513d5f823e3d90fd5b6040516352d1902d60e01b81529290916020846004816001600160a01b0387165afa5f948161225c575b5061222757634c9c8ce360e01b5f526001600160a01b03831660045260245ffd5b90915f516020612bbf5f395f51905f52840361224857610322929350612897565b632a87526960e21b5f52600484905260245ffd5b9094506020813d602011612288575b81612278602093836102f2565b810103126101fb5751935f612206565b3d915061226b565b908160209103126101fb575161048a816101e9565b6001600160a01b03918216815291166020820152604081019190915260806060820181905261048a9291019061044d565b939193843b6122e7575b5050505050565b6123086020936040519586948594630a85bd0160e11b8652600486016122a5565b03815f6001600160a01b0387165af15f918161237b575b50612359575061232d611a3c565b805191908261235257633250574960e11b5f526001600160a01b03821660045260245ffd5b6020915001fd5b6001600160e01b03191663757a42ff60e11b0161213b57505f808080806122e0565b61239591925060203d60201161217e5761216f81836102f2565b905f61231f565b6001600160a01b0360036123ae612a5c565b01541690565b611d3561240a612428602461048a95966040519060018060a01b038151166020830152602060018060a01b03910151166040820152604081526123f86060826102f2565b80516040519485926020840190611b60565b90815263414d504360e01b60208201520360048101845201826102f2565b60208560405196879583870137840101905f8252611b60565b908160209103126101fb575161048a81610324565b61247e91602091604051808095819463c92557a760e01b83528660048401818152019061044d565b03916001600160a01b03165afa9081156111d0575f916124e2575b506001600160a01b038116156124ac5790565b60405162461bcd60e51b815260206004820152600e60248201526d14105512081393d5081193d5539160921b6044820152606490fd5b6124fb915060203d6020116111c9576111ba81836102f2565b5f612499565b60ff5f516020612bff5f395f51905f525460401c161561251d57565b631afcd79f60e31b5f5260045ffd5b5f9081527f80bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab007930260205260409020546001600160a01b031690565b6001600160a01b03604061257836611f97565b0151511690565b9161258982611dc3565b906001600160a01b038116908115159081612618575b816125fe575b506125ec575061032292916115909181906001600160a01b0380861691167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9255f80a46116ed565b63a9fbf51f60e01b5f5260045260245ffd5b60ff915061260f90610d1285611650565b5416155f6125a5565b6001600160a01b038416831415915061259f565b612635906116ed565b80546001600160a01b0319169055565b905f61269c612653846117e3565b928083525f516020612b3f5f395f51905f5260205260408320549460018060a01b031683525f516020612b5f5f395f51905f5260205260408320948481036126aa575b5061171a565b555f526020525f6040812055565b848452856020526126cb60408520548286528760205280604087205561171a565b555f612696565b5f516020612bdf5f395f51905f525490805f525f516020612b9f5f395f51905f526020528160405f2055600160401b8210156102b75761272782600161032294015f516020612bdf5f395f51905f525561176d565b90919082549060031b91821b915f19901b1916179055565b90612749826117e3565b5f19810192908311611cd05760018060a01b03165f525f516020612b5f5f395f51905f5260205260405f20825f526020528060405f20555f525f516020612b3f5f395f51905f5260205260405f2055565b5f516020612bdf5f395f51905f52545f198101908111611cd057815f525f516020612b9f5f395f51905f526020526127d660405f20549161176d565b90549060031b1c6127ea816127278461176d565b5f525f516020612b9f5f395f51905f5260205260405f20555f525f516020612b9f5f395f51905f526020525f60408120555f516020612bdf5f395f51905f52548015612860575f190161284f61283f8261176d565b8154905f199060031b1b19169055565b5f516020612bdf5f395f51905f5255565b634e487b7160e01b5f52603160045260245ffd5b61287c611f0e565b905f8252336020830152604082013381515260203391510152565b90813b15612918575f516020612bbf5f395f51905f5280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2805115612900576128fd91612993565b50565b50503461290957565b63b398979f60e01b5f5260045ffd5b50634c9c8ce360e01b5f9081526001600160a01b0391909116600452602490fd5b6040516129476060826102f2565b602481527f616e64726f6d6564612e73746f726167652e7374642e6d73672e7369676e61746020820152637572657360e01b6040820152604051611d4381611d35602082018095611b60565b5f8061048a93602081519101845af46129aa611a3c565b91612ae0565b6001600160a01b038216918215159081612a06575b50156129d057505050565b6001600160a01b03166129f157637e27328960e01b5f52600482905260245ffd5b63177e802f60e01b5f5260045260245260445ffd5b6001600160a01b038316841491508115612a43575b508015612a29575b5f6129c5565b50816001600160a01b03612a3c85611df2565b1614612a23565b60ff9150612a5490610d1284611650565b54165f612a1b565b604051612a6a6060826102f2565b602181527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020820152601d60fa1b6040820152604051611d4381611d35602082018095611b60565b9081518151908181149384612aca575b5050505090565b602092939450820120920120145f808080612ac3565b90612b045750805115612af557602081519101fd5b63d6bda27560e01b5f5260045ffd5b81511580612b35575b612b15575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b15612b0d56fe645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed01645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed0080bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079300645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed03360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc645e039705490088daad89bae25049a34f4a9072d398537b1ab2425f24cbed02f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0080bb2b638cc20bc4d0a60d66940f3ab4a00c1d7b313497ca82fb0b4ab0079301a26469706673582212205947de494b38474fe9a86d78c67c8cd80f2f4986d03589e56e2812144ba2563564736f6c634300081c0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00";

type Cw721ContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Cw721ContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Cw721Contract__factory extends ContractFactory {
  constructor(...args: Cw721ContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(libraryAddress, overrides || {});
  }
  override deploy(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(libraryAddress, overrides || {}) as Promise<
      Cw721Contract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Cw721Contract__factory {
    return super.connect(runner) as Cw721Contract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Cw721ContractInterface {
    return new Interface(_abi) as Cw721ContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Cw721Contract {
    return new Contract(address, _abi, runner) as unknown as Cw721Contract;
  }
}
