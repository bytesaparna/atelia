/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AdodbContract, AdodbContractInterface } from "../AdodbContract";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "libraryAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ado_type",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.AdoTypeResponse",
        components: [
          {
            name: "ado_type",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ampReceive",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct AmpMsgLib.AmpPkt",
        components: [
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "funds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "ctx",
            type: "tuple",
            internalType: "struct AmpMsgLib.AmpPktCtx",
            components: [
              {
                name: "origin",
                type: "address",
                internalType: "address",
              },
              {
                name: "previous_sender",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "getAdoMetadataFromImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct Storage.AdoMetadata",
        components: [
          {
            name: "ado_type",
            type: "string",
            internalType: "string",
          },
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
          {
            name: "publisher",
            type: "address",
            internalType: "address",
          },
          {
            name: "implementation",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAdoTypeFromImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getAdoTypeFromProxy",
    inputs: [
      {
        name: "proxy",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "getImplementation",
    inputs: [
      {
        name: "ado_with_version",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "implementation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IAdodbContract.AdodbInitParams",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "publish",
    inputs: [
      {
        name: "ado_metadata",
        type: "tuple",
        internalType: "struct Storage.AdoMetadata",
        components: [
          {
            name: "ado_type",
            type: "string",
            internalType: "string",
          },
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
          {
            name: "publisher",
            type: "address",
            internalType: "address",
          },
          {
            name: "implementation",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.VersionResponse",
        components: [
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AdoDefaultInitialized",
    inputs: [
      {
        name: "adoType",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "adoOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AdoPublished",
    inputs: [
      {
        name: "ado_type",
        type: "string",
        indexed: false,
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        indexed: false,
        internalType: "string",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x61012080604052346102665761002b90611dbb8038038091610021828561026a565b83398101906102a1565b60405161003960408261026a565b600581526430b237b23160d91b60208201526040519061005a60408361026a565b60058252640302e312e360dc1b6020830152306080526040519061007f60608361026a565b602182527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020830152601d60fa1b604083015260206100fe604051936100c760408661026a565b60058552640302e302e360dc1b8386015261011060405195869384936327a0d66960e01b85526040600486015260448501906102c0565b838103600319016024850152906102c0565b03816001600160a01b0388165afa93841561025b5761014894610140935f9161022c575b5060a05260c0526102e4565b60e0526102e4565b610100525f516020611d9b5f395f51905f525460ff8160401c1661021d576002600160401b03196001600160401b038216016101c7575b604051611a62908161033982396080518181816103370152610474015260a05181610bdb015260c05181505060e05181818161037a0152610ae801526101005181610b500152f35b6001600160401b0319166001600160401b039081175f516020611d9b5f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f61017f565b63f92ee8a960e01b5f5260045ffd5b61024e915060203d602011610254575b610246818361026a565b8101906102a1565b5f610134565b503d61023c565b6040513d5f823e3d90fd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761028d57604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261026657516001600160a01b03811681036102665790565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b601f81511161030f576020815191015160208210610300571790565b5f198260200360031b1b161790565b60405163305a27a960e01b8152602060048201529081906103349060248301906102c0565b0390fdfe60806040526004361015610015575b36610f2b57005b5f3560e01c8063045ffa79146100e457806318200ed2146100df5780634f1ef286146100da57806352d1902d146100d557806354fd4d50146100d05780635c60da1b146100cb5780636b683896146100c65780638e5dc2de146100c15780638f09926d146100bc57806399fd4b90146100b7578063ad3cb1cc146100b2578063d1645084146100ad5763ebebcab70361000e57610a07565b610955565b61090e565b610857565b610700565b6106c3565b610523565b6104d4565b6104b9565b610462565b6102e5565b610169565b610129565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b60406101269260208352519160208082015201906100e9565b90565b34610154575f36600319011261015457610150610144610ada565b6040519182918261010d565b0390f35b5f80fd5b6001600160a01b0381160361015457565b346101545760203660031901126101545761019760043561018981610158565b610191610b1e565b50611128565b6040518091602082526101cf6101b982516080602086015260a08501906100e9565b6020830151848203601f190160408601526100e9565b60408201516001600160a01b039081166060858101919091529092015190911660808301520390f35b634e487b7160e01b5f52604160045260245ffd5b602081019081106001600160401b0382111761022757604052565b6101f8565b608081019081106001600160401b0382111761022757604052565b604081019081106001600160401b0382111761022757604052565b90601f801991011681019081106001600160401b0382111761022757604052565b60405190610292604083610262565b565b6001600160401b03811161022757601f01601f191660200190565b9291926102bb82610294565b916102c96040519384610262565b829481845281830111610154578281602093845f960137010152565b6040366003190112610154576004356102fd81610158565b6024356001600160401b03811161015457366023820112156101545761032d9036906024816004013591016102af565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016308114908115610440575b5061043157813b156103f7576103e7916103ac61039e7f0000000000000000000000000000000000000000000000000000000000000000611014565b6103a66111bb565b90611804565b156103e9576103e26103db6103cf6103c26118fc565b546001600160a01b031690565b6001600160a01b031690565b33146111df565b6111f4565b005b6103e26103db6103cf61155c565b60405162461bcd60e51b81526020600482015260126024820152712727aa2fa4a6a82622a6a2a72a20aa24a7a760711b6044820152606490fd5b63703e46dd60e11b5f5260045ffd5b5f5160206119ed5f395f51905f52546001600160a01b0316141590505f610362565b34610154575f366003190112610154577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036104315760206040515f5160206119ed5f395f51905f528152f35b34610154575f36600319011261015457610150610144610b42565b34610154575f366003190112610154575f5160206119ed5f395f51905f52546040516001600160a01b039091168152602090f35b9080601f8301121561015457816020610126933591016102af565b34610154576020366003190112610154576004356001600160401b03811161015457610553903690600401610508565b61055b611743565b50610565816119b1565b905f19821461063f578061058561057f8461058b9461184e565b9361175c565b906118a6565b81511561067a5780511561063f576105d36105bb6105e1936003936105ae610283565b918252602082015261176a565b60016105c5611623565b01905f5260205260405f2090565b01546001600160a01b031690565b6001600160a01b03811615610606576040516001600160a01b03919091168152602090f35b60405162461bcd60e51b8152602060048201526011602482015270105113c81393d508141550931254d21151607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601360248201527224a72b20a624a21020a227902b22a929a4a7a760691b6044820152606490fd5b60405162461bcd60e51b815260206004820152601060248201526f494e56414c49442041444f205459504560801b6044820152606490fd5b9060206101269281815201906100e9565b34610154576020366003190112610154576101506106eb6004356106e681610158565b611128565b516040519182916020835260208301906100e9565b346101545760203660031901126101545760405161071d8161020c565b60043561072981610158565b81525f516020611a0d5f395f51905f5254906001600160401b0361075c60ff604085901c1615936001600160401b031690565b168015908161084f575b6001149081610845575b15908161083c575b5061082d576107bb90826107b260016001600160401b03195f516020611a0d5f395f51905f525416175f516020611a0d5f395f51905f5255565b61080957610b74565b6107c157005b5f516020611a0d5f395f51905f52805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1005b5f516020611a0d5f395f51905f52805460ff60401b1916600160401b179055610b74565b63f92ee8a960e01b5f5260045ffd5b9050155f610778565b303b159150610770565b839150610766565b34610154576020366003190112610154576004356001600160401b0381116101545760806003198236030112610154576040516108938161022c565b81600401356001600160401b038111610154576108b69060043691850101610508565b815260248201356001600160401b038111610154576103e7926108e160649260043691840101610508565b602084015260448101356108f481610158565b6040840152013561090481610158565b6060820152610c95565b34610154575f3660031901126101545761015060405161092f604082610262565b60058152640352e302e360dc1b60208201526040519182916020835260208301906100e9565b346101545760203660031901126101545760046020813561097581610158565b604051635c60da1b60e01b815292839182906001600160a01b03165afa9081156109fc575f916109b9575b6101506109ac83611128565b51604051918291826106b2565b90506020813d6020116109f4575b816109d460209383610262565b81010312610154576109ac61015091516109ed81610158565b91506109a0565b3d91506109c7565b6040513d5f823e3d90fd5b6020366003190112610154576004356001600160401b03811161015457806004019060806003198236030112610154576001600160a01b03610a4761155c565b163303610a95575f610a748192610a6e610a618680610e84565b9190926044369101610eb6565b91611574565b602081519101305af4610a85610ef0565b9015610a8d57005b602081519101fd5b60405162461bcd60e51b815260206004820152600a6024820152691393d517d2d15493915360b21b6044820152606490fd5b60405190610ad48261020c565b60608252565b610ae2610ac7565b50610b0c7f0000000000000000000000000000000000000000000000000000000000000000611014565b60405190610b198261020c565b815290565b60405190610b2b8261022c565b5f6060838181528160208201528260408201520152565b610b4a610ac7565b50610b0c7f0000000000000000000000000000000000000000000000000000000000000000611014565b51604051906001600160a01b0316610b8b8261020c565b815260ff5f516020611a0d5f395f51905f525460401c1615610c6157610bff60018060a01b038251166040519063a74e5ca560e01b6020830152602482015260248152610bd9604482610262565b7f0000000000000000000000000000000000000000000000000000000000000000611831565b50610c08610ada565b51610c2f610c29610c29610c1a610b42565b5194516001600160a01b031690565b926112ba565b6001600160a01b03909116917f542e3741e19b27af9739b3c2fe67ae9fececcd04a33dcb48e178f0f664e502f65f80a4565b631afcd79f60e31b5f5260045ffd5b9091610c87610126936040845260408401906100e9565b9160208184039101526100e9565b8051610cc3610cb960208401928351610cac610283565b91825260208201526118cb565b6020815191012090565b91610ccc611623565b6060820180519194916001600160a01b031615610e46576001850191610d026103cf60036105d38487905f5260205260405f2090565b610e095781516001600160a01b03165f908152600287016020819052604090912054610dc4577fa0124bccc2865a516bb2be39027eaee328d317ddbbecf0aca289920606ae0f8f9682610d97600393610d83610da297610d768b610d7187610dac9d905f5260205260405f2090565b6113ea565b516001600160a01b031690565b60018060a01b03165f5260205260405f2090565b556105c58382611521565b805460ff19169055565b51905190610dbf60405192839283610c70565b0390a1565b60405162461bcd60e51b815260206004820181905260248201527f494d504c454d454e544154494f4e20414c5245414459205055424c49534845446044820152606490fd5b60405162461bcd60e51b8152602060048201526015602482015274105113c81053149150511648141550931254d21151605a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601660248201527524a72b20a624a21024a6a82622a6a2a72a20aa24a7a760511b6044820152606490fd5b903590601e198136030182121561015457018035906001600160401b0382116101545760200191813603831361015457565b919082604091031261015457604051610ece81610247565b60208082948035610ede81610158565b8452013591610eec83610158565b0152565b3d15610f1a573d90610f0182610294565b91610f0f6040519384610262565b82523d5f602084013e565b606090565b90815f8237015f815290565b610f33611773565b5f80356001600160e01b031916808252602092909252604090206001600160a01b03905416908115610fde575b506001600160a01b03811615610f9b575f809160405180610f818136610f1f565b03915af4610f8d610ef0565b9015610a8d57602081519101f35b60405162461bcd60e51b815260206004820152601b60248201527a111a585b5bdb990e88199d5b98dd1a5bdb881b9bdd08199bdd5b99602a1b6044820152606490fd5b61100491506001610fed611773565b019063ffffffff60e01b165f5260205260405f2090565b546001600160a01b03165f610f60565b60ff811690601f82116110435760405191611030604084610262565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b90600182811c92168015611080575b602083101461106c57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611061565b9060405191825f82549261109d84611052565b808452936001811690811561110657506001146110c2575b5061029292500383610262565b90505f9291925260205f20905f915b8183106110ea575050906020610292928201015f6110b5565b60209193508060019154838589010152019101909184926110d1565b90506020925061029294915060ff191682840152151560051b8201015f6110b5565b600190611133610b1e565b5061115c61113f611623565b6001600160a01b039092165f908152600283016020526040902090565b545f520160205260405f20604051906111748261022c565b61117d8161108a565b825261118b6001820161108a565b602083015260028101546001600160a01b039081166040840152600390910154166060820181905215610e465790565b604051906111ca604083610262565b60068252651ad95c9b995b60d21b6020830152565b156111e657565b6282b42960e81b5f5260045ffd5b6040516352d1902d60e01b81529290916020846004816001600160a01b0387165afa5f9481611274575b5061123f57634c9c8ce360e01b5f526001600160a01b03831660045260245ffd5b90915f5160206119ed5f395f51905f528403611260576102929293506116a1565b632a87526960e21b5f52600484905260245ffd5b9094506020813d6020116112a0575b8161129060209383610262565b810103126101545751935f61121e565b3d9150611283565b805191908290602001825e015f815290565b6112ca90604051918280926112a8565b03902090565b601f82116112dd57505050565b5f5260205f20906020601f840160051c83019310611315575b601f0160051c01905b81811061130a575050565b5f81556001016112ff565b90915081906112f6565b91909182516001600160401b03811161022757611346816113408454611052565b846112d0565b6020601f82116001146113855781906113769394955f9261137a575b50508160011b915f199060031b1c19161790565b9055565b015190505f80611362565b601f19821690611398845f5260205f2090565b915f5b8181106113d2575095836001959697106113ba575b505050811b019055565b01515f1960f88460031b161c191690555f80806113b0565b9192602060018192868b01518155019401920161139b565b91909182519283516001600160401b038111610227576114148161140e8554611052565b856112d0565b6020601f82116001146114ad5760039261144e8361148c94606094610292999a5f9261137a5750508160011b915f199060031b1c19161790565b85555b61146260208201516001870161131f565b60408101516002860180546001600160a01b0319166001600160a01b039283161790559101511690565b910180546001600160a01b0319166001600160a01b03909216919091179055565b601f198216956114c0855f5260205f2090565b965f5b81811061150957508361029297986060946003979461148c97600195106114f2575b505050811b018555611451565b01515f1983891b60f8161c191690555f80806114e5565b838301518955600190980197602093840193016114c3565b805490600160401b8210156102275760018201808255821015611548575f5260205f200155565b634e487b7160e01b5f52603260045260245ffd5b6001600160a01b03600361156e6118fc565b01541690565b6116016115ca6115e8602461012695966040519060018060a01b038151166020830152602060018060a01b03910151166040820152604081526115b8606082610262565b805160405194859260208401906112a8565b90815263414d504360e01b6020820152036004810184520182610262565b60208560405196879583870137840101905f82526112a8565b03601f198101835282610262565b634e487b7160e01b5f52601160045260245ffd5b604080516116318282610262565b601a81527930b7323937b6b2b2309739ba37b930b3b29737b99730b237b23160311b6020820152815161166c816116016020820180956112a8565b5190205f19810190811161169c57611691825192602084019283526020845283610262565b9051902060ff191690565b61160f565b90813b15611722575f5160206119ed5f395f51905f5280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a280511561170a5761170791611831565b50565b50503461171357565b63b398979f60e01b5f5260045ffd5b50634c9c8ce360e01b5f9081526001600160a01b0391909116600452602490fd5b6040519061175082610247565b60606020838281520152565b906001820180921161169c57565b610cb9906118cb565b604051611781606082610262565b602481527f616e64726f6d6564612e73746f726167652e7374642e6d73672e7369676e61746020820152637572657360e01b60408201526040516117cd816116016020820180956112a8565b5190205f19810190811161169c5760405190611691826117f66020820193849190602083019252565b03601f198101845283610262565b908151815190818114938461181b575b5050505090565b602092939450820120920120145f808080611814565b5f8061012693602081519101845af4611848610ef0565b91611953565b9081519081808210911802808218911415810281189182820391821161169c57602061187983610294565b936118876040519586610262565b83855261189384610294565b8583019390601f19013685370101905e90565b8051808318928111929092028218918281039190821161169c57602061187983610294565b6101266118ee9161160160208251920151600160405195869460208601906112a8565b600160fe1b815201906112a8565b60405161190a606082610262565b602181527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020820152601d60fa1b60408201526040516117cd816116016020820180956112a8565b90611977575080511561196857602081519101fd5b63d6bda27560e01b5f5260045ffd5b815115806119a8575b611988575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b15611980565b908151805b6119c157505f199150565b828101601f01516001600160f81b031916600160fe1b146119e5575f1901806119b6565b5f1901915056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220844180fa5dbe9ff4276d93760997e18745493fee6fa8e33e9704c675aef2c23664736f6c634300081e0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00";

type AdodbContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AdodbContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AdodbContract__factory extends ContractFactory {
  constructor(...args: AdodbContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(libraryAddress, overrides || {});
  }
  override deploy(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(libraryAddress, overrides || {}) as Promise<
      AdodbContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AdodbContract__factory {
    return super.connect(runner) as AdodbContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AdodbContractInterface {
    return new Interface(_abi) as AdodbContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AdodbContract {
    return new Contract(address, _abi, runner) as unknown as AdodbContract;
  }
}
