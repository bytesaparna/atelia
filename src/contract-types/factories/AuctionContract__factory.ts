/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  AuctionContract,
  AuctionContractInterface,
} from "../AuctionContract";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "libraryAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ado_type",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.AdoTypeResponse",
        components: [
          {
            name: "ado_type",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ampReceive",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct AmpMsgLib.AmpPkt",
        components: [
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "funds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "ctx",
            type: "tuple",
            internalType: "struct AmpMsgLib.AmpPktCtx",
            components: [
              {
                name: "origin",
                type: "address",
                internalType: "address",
              },
              {
                name: "previous_sender",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "bid",
    inputs: [
      {
        name: "auction_id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "bid",
    inputs: [
      {
        name: "auction_id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "auction_id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "claim",
    inputs: [
      {
        name: "auction_id",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "recipient_addr",
        type: "address",
        internalType: "address",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "implementation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IAuctionContract.AuctionContractInitParams",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "token_address",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "latest_auction_state",
    inputs: [
      {
        name: "token_id",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IAuctionContract.TokenAuctionState",
        components: [
          {
            name: "high_bidder_addr",
            type: "address",
            internalType: "address",
          },
          {
            name: "high_bidder_amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "is_cancelled",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "is_bought",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "is_claimed",
            type: "bool",
            internalType: "bool",
          },
          {
            name: "auction_id",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "start_time",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "end_time",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "buy_now_price",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "min_bid",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "min_raise",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "tuple",
            internalType: "struct RecipientLib.Recipient",
            components: [
              {
                name: "recipient",
                type: "string",
                internalType: "string",
              },
              {
                name: "message",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "bid_asset",
            type: "tuple",
            internalType: "struct AssetLib.ResolvedAsset",
            components: [
              {
                name: "native",
                type: "string",
                internalType: "string",
              },
              {
                name: "smart",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "start_auction",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IAuctionContract.StartAuctionParams",
        components: [
          {
            name: "token_id",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "min_bid",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "min_raise",
            type: "uint128",
            internalType: "uint128",
          },
          {
            name: "schedule",
            type: "tuple",
            internalType: "struct ScheduleLib.Schedule",
            components: [
              {
                name: "start",
                type: "tuple",
                internalType: "struct ScheduleLib.Expiry",
                components: [
                  {
                    name: "from_now",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "at_time",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "infinite",
                    type: "bool",
                    internalType: "bool",
                  },
                ],
              },
              {
                name: "end",
                type: "tuple",
                internalType: "struct ScheduleLib.Expiry",
                components: [
                  {
                    name: "from_now",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "at_time",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "infinite",
                    type: "bool",
                    internalType: "bool",
                  },
                ],
              },
            ],
          },
          {
            name: "recipient",
            type: "tuple",
            internalType: "struct RecipientLib.Recipient",
            components: [
              {
                name: "recipient",
                type: "string",
                internalType: "string",
              },
              {
                name: "message",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "bid_asset",
            type: "tuple",
            internalType: "struct AssetLib.Asset",
            components: [
              {
                name: "native",
                type: "string",
                internalType: "string",
              },
              {
                name: "smart",
                type: "string",
                internalType: "string",
              },
            ],
          },
          {
            name: "buy_now_price",
            type: "uint128",
            internalType: "uint128",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.VersionResponse",
        components: [
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AdoDefaultInitialized",
    inputs: [
      {
        name: "adoType",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "adoOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "AuctionStarted",
    inputs: [
      {
        name: "token_id",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
      {
        name: "auction_id",
        type: "uint256",
        indexed: true,
        internalType: "uint256",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x61012080604052346102695761002b906132a48038038091610021828561026d565b83398101906102a4565b60405161003960408261026d565b600881526765786368616e676560c01b60208201526040519061005d60408361026d565b60058252640302e312e360dc1b6020830152306080526040519061008260608361026d565b602182527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020830152601d60fa1b60408301526020610101604051936100ca60408661026d565b60058552640302e302e360dc1b8386015261011360405195869384936327a0d66960e01b85526040600486015260448501906102c3565b838103600319016024850152906102c3565b03816001600160a01b0388165afa93841561025e5761014b94610143935f9161022f575b5060a05260c0526102e7565b60e0526102e7565b610100525f5160206132845f395f51905f525460ff8160401c16610220576002600160401b03196001600160401b038216016101ca575b604051612f48908161033c82396080518181816103e1015261051c015260a05181610e02015260c05181505060e0518181816104240152610bce01526101005181610ed20152f35b6001600160401b0319166001600160401b039081175f5160206132845f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610182565b63f92ee8a960e01b5f5260045ffd5b610251915060203d602011610257575b610249818361026d565b8101906102a4565b5f610137565b503d61023f565b6040513d5f823e3d90fd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761029057604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261026957516001600160a01b03811681036102695790565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b601f815111610312576020815191015160208210610303571790565b5f198260200360031b1b161790565b60405163305a27a960e01b8152602060048201529081906103379060248301906102c3565b0390fdfe60806040526004361015610015575b3661147b57005b5f3560e01c8063045ffa79146100f45780633744dd83146100ef578063379607f5146100ea578063454a2ab3146100e55780634f1ef286146100e057806352d1902d146100db57806354fd4d50146100d6578063598647f8146100d15780635c60da1b146100cc578063793c64af146100c7578063a508a946146100c2578063ad3cb1cc146100bd578063ddd5e1b2146100b85763ebebcab70361000e57610aed565b610ac5565b610a7e565b610989565b6106fd565b61059b565b61057c565b610561565b61050a565b6103a0565b610388565b610363565b6102e5565b610147565b5f91031261010357565b5f80fd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6040610144926020835251916020808201520190610107565b90565b34610103575f3660031901126101035761016e610162610bc0565b6040519182918261012b565b0390f35b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b038211176101a157604052565b610172565b606081019081106001600160401b038211176101a157604052565b602081019081106001600160401b038211176101a157604052565b60e081019081106001600160401b038211176101a157604052565b90601f801991011681019081106001600160401b038211176101a157604052565b604051906102286101c0836101f7565b565b6040519061022860e0836101f7565b604051906102286040836101f7565b6040519061022860a0836101f7565b604051906102286020836101f7565b604051906102286080836101f7565b6001600160a01b0381160361010357565b6001600160401b0381116101a157601f01601f191660200190565b81601f82011215610103576020813591016102bb82610286565b926102c960405194856101f7565b8284528282011161010357815f92602092838601378301015290565b34610103576020366003190112610103576004356001600160401b03811161010357604060031982360301126101035760405161032181610186565b816004013561032f81610275565b815260248201356001600160401b0381116101035761036192600461035792369201016102a1565b6020820152610c04565b005b3461010357602036600319011261010357610361600435610382611693565b90611818565b60203660031901126101035761036134600435611cbf565b6040366003190112610103576004356103b881610275565b6024356001600160401b038111610103576103d79036906004016102a1565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163081149081156104e8575b506104d957813b1561049f57610361916104566104487f0000000000000000000000000000000000000000000000000000000000000000611564565b610450611f61565b90612d55565b156104915761048c61048561047961046c612e1d565b546001600160a01b031690565b6001600160a01b031690565b3314611f85565b611f9a565b61048c61048561047961268d565b60405162461bcd60e51b81526020600482015260126024820152712727aa2fa4a6a82622a6a2a72a20aa24a7a760711b6044820152606490fd5b63703e46dd60e11b5f5260045ffd5b5f516020612ed35f395f51905f52546001600160a01b0316141590505f61040c565b34610103575f366003190112610103577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036104d95760206040515f516020612ed35f395f51905f528152f35b34610103575f3660031901126101035761016e610162610ec4565b3461010357604036600319011261010357610361602435600435611cbf565b34610103575f366003190112610103575f516020612ed35f395f51905f52546040516001600160a01b039091168152602090f35b6101449160206105e88351604084526040840190610107565b920151906020818403910152610107565b90602061060f8351604084526040840190610107565b928101516001600160a01b031691015290565b602080825282516001600160a01b03169082015261014490602083015160408201526106576040840151606083019015159052565b6060830151151560808201526080830151151560a082015260a083015160c082015260c083015160e082015260e08301516101008201526101008301516101208201526101208301516101408201526101408301516101608201526101c06101a06106ec6106d6610160870151846101808701526101e08601906105cf565b610180870151858203601f1901848701526105f9565b9401516001600160a01b0316910152565b3461010357602036600319011261010357600435610719610f28565b506107226115ca565b5f91825260068101602052604090912061073b90610fad565b8051151561074890610ff5565b805161075390611048565b61075c9161107c565b515f818152600583016020526040902090919061077890611095565b908280600483019061079191905f5260205260405f2090565b61079a906111f8565b5f9182526003909201602052604090206107b390611285565b82519091906001600160a01b03169360208401519360408101516107d690151590565b9160608201516107e590151590565b608090920151151590608085015160a08601519160c08701519387519560208901519760408a015199606001519a516108239060018060a01b031690565b9b61082c610218565b6001600160a01b03909e168e528d60200152151560408d0152151560608c0152151560808b015260a08a015260c089015260e08801526101008701526101208601526101408501526101608401526101808301526001600160a01b03166101a082015260405161016e819282610622565b35906001600160801b038216820361010357565b8015150361010357565b9190826060910312610103576040516108d3816101a6565b604080829480358452602081013560208501520135916108f2836108b1565b0152565b919060c08382031261010357602061092a6040519261091484610186565b6060849661092283826108bb565b8652016108bb565b910152565b9190604083820312610103576040519061094882610186565b819380356001600160401b03811161010357826109669183016102a1565b83526020810135916001600160401b0383116101035760209261092a92016102a1565b34610103576020366003190112610103576004356001600160401b038111610103576101806003198236030112610103576109c261022a565b816004013581526109d56024830161089d565b60208201526109e66044830161089d565b60408201526109f836606484016108f6565b60608201526101248201356001600160401b03811161010357610a21906004369185010161092f565b6080820152610144820135916001600160401b03831161010357610164610a6091610a55610361956004369184010161092f565b60a08501520161089d565b60c08201526112d9565b60405190610a796020836101f7565b5f8252565b34610103575f3660031901126101035761016e604051610a9f6040826101f7565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610107565b3461010357604036600319011261010357610361602435600435610ae882610275565b611818565b6020366003190112610103576004356001600160401b03811161010357806004019060806003198236030112610103576001600160a01b03610b2d61268d565b163303610b7b575f610b5a8192610b54610b4786806113d8565b919092604436910161140a565b916126a5565b602081519101305af4610b6b611440565b9015610b7357005b602081519101fd5b60405162461bcd60e51b815260206004820152600a6024820152691393d517d2d15493915360b21b6044820152606490fd5b60405190610bba826101c1565b60608252565b610bc8610bad565b50610bf27f0000000000000000000000000000000000000000000000000000000000000000611564565b60405190610bff826101c1565b815290565b5f516020612ef35f395f51905f5254906001600160401b03610c35604084901c60ff1615936001600160401b031690565b1680159081610d28575b6001149081610d1e575b159081610d15575b50610d0657610c949082610c8b60016001600160401b03195f516020612ef35f395f51905f525416175f516020612ef35f395f51905f5255565b610ce257610d95565b610c9a57565b5f516020612ef35f395f51905f52805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b5f516020612ef35f395f51905f52805460ff60401b1916600160401b179055610d95565b63f92ee8a960e01b5f5260045ffd5b9050155f610c51565b303b159150610c49565b839150610c3f565b80546001600160a01b0319166001600160a01b03909216919091179055565b15610d5657565b60405162461bcd60e51b81526020600482015260176024820152761513d2d15397d05111149154d4d7d393d517d193d55391604a1b6044820152606490fd5b805160405191906001600160a01b0316610dae836101c1565b825260ff5f516020612ef35f395f51905f525460401c1615610eb55761022891610e2660018060a01b038251166040519063a74e5ca560e01b6020830152602482015260248152610e006044826101f7565b7f0000000000000000000000000000000000000000000000000000000000000000612d15565b50610e2f610bc0565b51610e56610e50610e50610e41610ec4565b5194516001600160a01b031690565b926115b4565b6001600160a01b03909116917f542e3741e19b27af9739b3c2fe67ae9fececcd04a33dcb48e178f0f664e502f65f80a4610ea4610e9e6020610e966115ca565b93015161167a565b82610d30565b546001600160a01b03161515610d4f565b631afcd79f60e31b5f5260045ffd5b610ecc610bad565b50610bf27f0000000000000000000000000000000000000000000000000000000000000000611564565b60405190610f0382610186565b60606020838281520152565b60405190610f1c82610186565b5f602083606081520152565b604051906101c082018281106001600160401b038211176101a1576040525f6101a0838281528260208201528260408201528260608201528260808201528260a08201528260c08201528260e0820152826101008201528261012082015282610140820152610f95610ef6565b610160820152610fa3610f0f565b6101808201520152565b90604051918281549182825260208201905f5260205f20925f5b818110610fdc575050610228925003836101f7565b8454835260019485019487945060209093019201610fc7565b15610ffc57565b60405162461bcd60e51b815260206004820152601060248201526f1393d7d05550d51253d397d193d5539160821b6044820152606490fd5b634e487b7160e01b5f52601160045260245ffd5b5f1981019190821161105657565b611034565b9190820391821161105657565b634e487b7160e01b5f52603260045260245ffd5b80518210156110905760209160051b010190565b611068565b9060405160a08101908082106001600160401b038311176101a1576102289160405260806110fb6002839660018060a01b03815416855260018101546020860152015460ff81161515604085015260ff8160081c161515606085015260ff9060101c1690565b1515910152565b90600182811c92168015611130575b602083101461111c57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691611111565b5f929181549161114983611102565b808352926001811690811561119e575060011461116557505050565b5f9081526020812093945091925b838310611184575060209250010190565b600181602092949394548385870101520191019190611173565b915050602093945060ff929192191683830152151560051b010190565b906040516111c881610186565b602081936040516111e4816111dd818561113a565b03826101f7565b8352600101546001600160a01b0316910152565b90604051611205816101dc565b60c060088294805484526001810154602085015260405161122581610186565b604051611239816111dd816002870161113a565b815260405161124f816111dd816003870161113a565b60208201526040850152611265600482016111bb565b606085015260068101546080850152600781015460a08501520154910152565b9060405161129281610186565b82546001600160a01b031681526001909201546020830152565b6001600160a01b03918216815291166020820152604081019190915260600190565b6040513d5f823e3d90fd5b6112ea61047961047961046c6115ca565b6112f2611693565b8251823b1561010357611320925f92836040518096819582946323b872dd60e01b84523090600485016112ac565b03925af180156113d3576113b9575b50611391611340606083015161204e565b83519161134b611693565b60208601516001600160801b031660408701516001600160801b031660808801519161137a60a08a01516120c0565b60c08a01519094906001600160801b031697612558565b90517ff8910119ddbef5440c54532457dfe8250a10ed39e583292818f44724b9e1344c5f80a3565b806113c75f6113cd936101f7565b806100f9565b5f61132f565b6112ce565b903590601e198136030182121561010357018035906001600160401b0382116101035760200191813603831361010357565b91908260409103126101035760405161142281610186565b6020808294803561143281610275565b84520135916108f283610275565b3d1561146a573d9061145182610286565b9161145f60405193846101f7565b82523d5f602084013e565b606090565b90815f8237015f815290565b611483612cbb565b5f80356001600160e01b031916808252602092909252604090206001600160a01b0390541690811561152e575b506001600160a01b038116156114eb575f8091604051806114d1813661146f565b03915af46114dd611440565b9015610b7357602081519101f35b60405162461bcd60e51b815260206004820152601b60248201527a111a585b5bdb990e88199d5b98dd1a5bdb881b9bdd08199bdd5b99602a1b6044820152606490fd5b6115549150600161153d612cbb565b019063ffffffff60e01b165f5260205260405f2090565b546001600160a01b03165f6114b0565b60ff811690601f821161159357604051916115806040846101f7565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b805191908290602001825e015f815290565b6115c490604051918280926115a2565b03902090565b6040516115d86060826101f7565b602a81527f616e64726f6d6564612e73746f726167652e61756374696f6e2e61756374696f6020820152691b8b58dbdb9d1c9858dd60b21b60408201526040516116388161162a6020820180956115a2565b03601f1981018352826101f7565b5190205f198101908111611056576040519061166f826116616020820193849190602083019252565b03601f1981018452836101f7565b9051902060ff191690565b6101449061168e61168961268d565b612732565b612874565b6001600160a01b0360406116a63661297d565b0151511690565b156116b457565b60405162461bcd60e51b815260206004820152600e60248201526d105550d51253d397d093d551d21560921b6044820152606490fd5b156116f157565b60405162461bcd60e51b8152602060048201526011602482015270105550d51253d397d0d05390d153131151607a1b6044820152606490fd5b1561173157565b60405162461bcd60e51b815260206004820152600f60248201526e105550d51253d397d0d31052535151608a1b6044820152606490fd5b1561176f57565b60405162461bcd60e51b815260206004820152600a6024820152692727aa2fa124a22222a960b11b6044820152606490fd5b908160209103126101035751610144816108b1565b156117bd57565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fd5b610144939260609260018060a01b0316825260208201528160408201520190610107565b6118206115ca565b80549091906001600160a01b031660058301906118458383905f5260205260405f2090565b61184e90611095565b918380600487019061186791905f5260205260405f2090565b611870906111f8565b5f91825260039096016020526040902061188990611285565b92606081015161189890151590565b156118a2906116ad565b60408101516118b190156116ea565b60808101516118c0901561172a565b80516001600160a01b03166118d3611693565b6001600160a01b03166118ef916001600160a01b031614611768565b602001519361190591905f5260205260405f2090565b600201805462ff0000191662010000179055602090910151906001600160a01b0316803b15610103576040516323b872dd60e01b8152915f918391829084908290611955908b30600485016112ac565b03925af180156113d357611aae575b50606082018051602001519092906001600160a01b031615611a7a576040018051602001515190929015611a2257916119d893915f60206119b6610479610479838099510160018060a01b0390511690565b93510151604051630200057560e51b81529687958694859391600485016117f4565b03925af180156113d357610228915f916119f3575b506117b6565b611a15915060203d602011611a1b575b611a0d81836101f7565b8101906117a1565b5f6119ed565b503d611a03565b516020908101516119d894919350611a4490610479906001600160a01b031681565b60405163a9059cbb60e01b81526001600160a01b03909216600483015260248201929092529283919082905f9082906044820190565b6040015160209081015180515f95869550909391909201916001600160a01b03165af1611aa5611440565b9015610b735750565b806113c75f611abc936101f7565b5f611964565b15611ac957565b60405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d0925111115160921b6044820152606490fd5b906024820180921161105657565b9190820180921161105657565b15611b2157565b60405162461bcd60e51b815260206004820152600e60248201526d414d4f554e545f544f4f5f4c4f5760901b6044820152606490fd5b15611b5e57565b60405162461bcd60e51b8152602060048201526013602482015272105550d51253d397d393d517d4d51054951151606a1b6044820152606490fd5b15611ba057565b60405162461bcd60e51b815260206004820152600d60248201526c105550d51253d397d153911151609a1b6044820152606490fd5b15611bdc57565b60405162461bcd60e51b815260206004820152600f60248201526e0829a9eaa9ca8be9a92a69a82a8869608b1b6044820152606490fd5b15611c1a57565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fd5b8151608091600291611c71906001600160a01b031682610d30565b60208401516001820155019160408101511515835460ff61ff006060850151151560081b1692169061ffff1916171783550151151562ff0000825491151560101b169062ff00001916179055565b611cc76115ca565b60058101916060611d05611d00836004611cf1611cec838a905f5260205260405f2090565b611095565b9601905f5260205260405f2090565b6111f8565b611d21611d1c611d186040870151151590565b1590565b6116ea565b611d38611d33611d1884870151151590565b6116ad565b611d50611d4b611d186080870151151590565b61172a565b8351611d7c906001600160a01b0316611d6a610479611693565b6001600160a01b039091161415611ac2565b611d97611d8f8251602084015190611b0d565b871015611b1a565b611dbe611da2612a41565b611db28160808501511115611b57565b60a08301511015611b99565b018051602001519094906001600160a01b031615611f4d57611e1e91602082611df7610479610479848b510160018060a01b0390511690565b611dff611693565b5f6040518098819582946323b872dd60e01b84523090600485016112ac565b03925af19283156113d357611e9493611e3e915f91611f2e575b50611c13565b8351611e86906001600160a01b031694611e81836020830198868a519a611e73611e66611693565b6001600160a01b03168752565b52905f5260205260405f2090565b611c56565b611e8e611693565b90612a8c565b506001600160a01b0381169283611eac575b50505050565b8051602001516001600160a01b031615611f075751602090810151611ee4945090929190611a4490610479906001600160a01b031681565b03925af180156113d357611efe915f916119f357506117b6565b5f808080611ea6565b50505f80808093611f2095828215611f25575bf16117b6565b611efe565b506108fc611f1a565b611f47915060203d602011611a1b57611a0d81836101f7565b5f611e38565b611e9491611f5c823414611bd5565b611e3e565b60405190611f706040836101f7565b60068252651ad95c9b995b60d21b6020830152565b15611f8c57565b6282b42960e81b5f5260045ffd5b6040516352d1902d60e01b81529290916020846004816001600160a01b0387165afa5f948161201a575b50611fe557634c9c8ce360e01b5f526001600160a01b03831660045260245ffd5b90915f516020612ed35f395f51905f52840361200657610228929350612bd1565b632a87526960e21b5f52600484905260245ffd5b9094506020813d602011612046575b81612036602093836101f7565b810103126101035751935f611fc4565b3d9150612029565b906120726020926120688151612062612a41565b90612c73565b9384910151612c73565b918281101561207f579190565b60405162461bcd60e51b815260206004820152601960248201527853544152545f54494d455f41465445525f454e445f54494d4560381b6044820152606490fd5b6120c8610f0f565b50805151158015602083019182515115159082906121ce575b156121995781612191575b5061214c5781515161213657612110915061210861168961268d565b905190612874565b61014461211b610239565b91612124610a6a565b83526001600160a01b03166020830152565b5051612140610239565b9081525f602082015290565b60405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f545f42455f424f54485f4e41544956455f414e445f534d415254006044820152606490fd5b90505f6120ec565b60405162461bcd60e51b815260206004820152600d60248201526c1253959053125117d054d4d155609a1b6044820152606490fd5b50806120e1565b5f1981146110565760010190565b9060206001916121fb838060a01b0382511685610d30565b0151910155565b601f821161220f57505050565b5f5260205f20906020601f840160051c83019310612247575b601f0160051c01905b81811061223c575050565b5f8155600101612231565b9091508190612228565b91909182516001600160401b0381116101a157612278816122728454611102565b84612202565b6020601f82116001146122b75781906122a89394955f926122ac575b50508160011b915f199060031b1c19161790565b9055565b015190505f80612294565b601f198216906122ca845f5260205f2090565b915f5b818110612304575095836001959697106122ec575b505050811b019055565b01515f1960f88460031b161c191690555f80806122e2565b9192602060018192868b0151815501940192016122cd565b91909182519283516001600160401b0381116101a157612346816123408554611102565b85612202565b6020601f8211600114612398576001926123808361239194602094610228999a5f926122ac5750508160011b915f199060031b1c19161790565b85555b01516001600160a01b031690565b9101610d30565b601f198216956123ab855f5260205f2090565b965f5b8181106123f4575083610228979860209460019794612391978995106123dc575b505050811b018555612383565b01515f1960f88460031b161c191690555f80806123cf565b838301518955600190980197602093840193016123ae565b9080518255602081015160018301556002820160408201519081518051906001600160401b0382116101a157612446826123408554611102565b602090601f83116001146124bb5793600895936124818461248f9560209560c0995f926122ac5750508160011b915f199060031b1c19161790565b90555b015160038601612251565b6124a060608201516004860161231c565b6080810151600685015560a081015160078501550151910155565b90601f198316916124cf855f5260205f2090565b925f5b81811061251957508460209460c0989460089a989461248f9860019510612501575b505050811b019055612484565b01515f1960f88460031b161c191690555f80806124f4565b929360206001819287860151815501950193016124d2565b805490600160401b8210156101a15760018201808255821015611090575f5260205f200155565b939495989791929896909661256b6115ca565b96600188019687549b8c9a8b996125818b6121d5565b905561258b610239565b6001600160a01b0390911681528860208201528960038c01906125b591905f5260205260405f2090565b906125bf916121e3565b6125c761022a565b96600160801b60019003168752600160801b6001900316602087015260408601526060850152608084015260a0830152600160801b600190031660c082015282600485019061261d91905f5260205260405f2090565b906126279161240c565b61262f610248565b5f8082526020808301829052604080840183905260608401839052608084018390528583526005870190915290209061266791611c56565b5f90815260068301602052604090209061268091612531565b6002019061022891612531565b6001600160a01b03600361269f612e1d565b01541690565b61162a6126fb612719602461014495966040519060018060a01b038151166020830152602060018060a01b03910151166040820152604081526126e96060826101f7565b805160405194859260208401906115a2565b90815263414d504360e01b60208201520360048101845201826101f7565b60208560405196879583870137840101905f82526115a2565b60409081519061274283836101f7565b600382526276667360e81b60208301526001600160a01b031680156128205761278e9291602091612771610257565b9182528351808096819463fd7687ef60e01b83526004830161012b565b03915afa9182156113d3575f926127ef575b506001600160a01b038216156127b4575090565b5162461bcd60e51b8152602060048201526015602482015274159194c81859191c995cdcc81b9bdd08199bdd5b99605a1b6044820152606490fd5b61281291925060203d602011612819575b61280a81836101f7565b81019061285f565b905f6127a0565b503d612800565b825162461bcd60e51b815260206004820152601860248201527712d95c9b995b081859191c995cdcc81b9bdd08199bdd5b9960421b6044820152606490fd5b90816020910312610103575161014481610275565b61289c91602091604051808095819463c92557a760e01b835286600484018181520190610107565b03916001600160a01b03165afa9081156113d3575f91612900575b506001600160a01b038116156128ca5790565b60405162461bcd60e51b815260206004820152600e60248201526d14105512081393d5081193d5539160921b6044820152606490fd5b612919915060203d6020116128195761280a81836101f7565b5f6128b7565b6040519061292c826101a6565b815f81525f6020820152604080519161294483610186565b5f83525f60208401520152565b90939293848311610103578411610103578101920390565b90604082820312610103576101449161140a565b61298561291f565b5061298e612d32565b9060248110612a3d576001600160a01b036129ba60036129ac612e1d565b01546001600160a01b031690565b168015612a38573303612a3d5763beb2afbd60e01b3660031901356001600160e01b03191601612a3d573660231901356129f381611aff565b8210612a3857612a2c9181612a1d612a16612a10612a2495611aff565b8461105b565b9182611b0d565b915f612951565b810190612969565b60018252604082015290565b505090565b5090565b6103e842024281046103e814421517156110565790565b906060600391612a7160018060a01b0382511685610d30565b60208101516001850155604081015160028501550151910155565b90929192604051612a9e6060826101f7565b602f81527f616e64726f6d6564612e73746f726167652e61756374696f6e2e61756374696f60208201526e6e2d636f6e74726163742e6269647360881b6040820152604051612af58161162a6020820180956115a2565b5190205f1981019290831161105657612bb594612bcb612b9a612bb5600294612bba6102289860405190612b36826116616020820193849190602083019252565b60ff1991519020169586549b8c998a968793612b51856121d5565b8b55612b5b612a41565b612b63610266565b6001600160a01b03851681529160208301526040820152866060820152612b958560018d01905f5260205260405f2090565b612a58565b6001600160a01b03165f908152600389016020526040902090565b612531565b60048501905f5260205260405f2090565b01612531565b90813b15612c52575f516020612ed35f395f51905f5280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2805115612c3a57612c3791612d15565b50565b505034612c4357565b63b398979f60e01b5f5260045ffd5b50634c9c8ce360e01b5f9081526001600160a01b0391909116600452602490fd5b81612c7d91612d82565b908110612c875790565b60405162461bcd60e51b815260206004820152600c60248201526b1512535157d156141254915160a21b6044820152606490fd5b604051612cc96060826101f7565b602481527f616e64726f6d6564612e73746f726167652e7374642e6d73672e7369676e61746020820152637572657360e01b60408201526040516116388161162a6020820180956115a2565b5f8061014493602081519101845af4612d2c611440565b91612e74565b612d3a61291f565b905f8252336020830152604082013381515260203391510152565b9081518151908181149384612d6c575b5050505090565b602092939450820120920120145f808080612d65565b906040820151612e16578151151580612e09575b612db8576020820191825115612dac5750505190565b61014492505190611b0d565b60405162461bcd60e51b815260206004820152602360248201527f43414e4e4f545f42455f424f54485f46524f4d5f4e4f575f414e445f41545f54604482015262494d4560e81b6064820152608490fd5b5060208201511515612d96565b50505f1990565b604051612e2b6060826101f7565b602181527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020820152601d60fa1b60408201526040516116388161162a6020820180956115a2565b90612e985750805115612e8957602081519101fd5b63d6bda27560e01b5f5260045ffd5b81511580612ec9575b612ea9575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b15612ea156fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a2646970667358221220bdc5df6c3c59bffc7080c98ad680c94725d52ca5ce455a46d321a850caa4be0e64736f6c634300081e0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00";

type AuctionContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AuctionContract__factory extends ContractFactory {
  constructor(...args: AuctionContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(libraryAddress, overrides || {});
  }
  override deploy(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(libraryAddress, overrides || {}) as Promise<
      AuctionContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AuctionContract__factory {
    return super.connect(runner) as AuctionContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionContractInterface {
    return new Interface(_abi) as AuctionContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AuctionContract {
    return new Contract(address, _abi, runner) as unknown as AuctionContract;
  }
}
