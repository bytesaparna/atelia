/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type { AppContract, AppContractInterface } from "../AppContract";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "libraryAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "add_app_component",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IAppContract.AppComponentParam",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "instantiate_msg",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "ado_type",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "ado_type",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.AdoTypeResponse",
        components: [
          {
            name: "ado_type",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ampReceive",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct AmpMsgLib.AmpPkt",
        components: [
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "funds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "ctx",
            type: "tuple",
            internalType: "struct AmpMsgLib.AmpPktCtx",
            components: [
              {
                name: "origin",
                type: "address",
                internalType: "address",
              },
              {
                name: "previous_sender",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "config",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IAppContract.ConfigResponse",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "components",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "get_all_components",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IAppContract.ComponentsResponse",
        components: [
          {
            name: "components",
            type: "tuple[]",
            internalType: "struct IAppContract.ComponentResponse[]",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "component_address",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "get_component",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
    ],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IAppContract.ComponentResponse",
        components: [
          {
            name: "name",
            type: "string",
            internalType: "string",
          },
          {
            name: "component_address",
            type: "address",
            internalType: "address",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "implementation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IAppContract.AppContractInitParams",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "app_name",
            type: "string",
            internalType: "string",
          },
          {
            name: "components",
            type: "tuple[]",
            internalType: "struct IAppContract.AppComponentParam[]",
            components: [
              {
                name: "name",
                type: "string",
                internalType: "string",
              },
              {
                name: "instantiate_msg",
                type: "bytes",
                internalType: "bytes",
              },
              {
                name: "ado_type",
                type: "string",
                internalType: "string",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.VersionResponse",
        components: [
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AdoDefaultInitialized",
    inputs: [
      {
        name: "adoType",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "adoOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "AppNotInitialized",
    inputs: [],
  },
  {
    type: "error",
    name: "ComponentAlreadyExists",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "ComponentNotFound",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "ImplementationNotFound",
    inputs: [
      {
        name: "name",
        type: "string",
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidComponent",
    inputs: [
      {
        name: "reason",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
  {
    type: "error",
    name: "UnauthorizedAccess",
    inputs: [
      {
        name: "sender",
        type: "address",
        internalType: "address",
      },
    ],
  },
] as const;

const _bytecode =
  "0x610120806040523461026d5761002b9061259c80380380916100218285610271565b83398101906102a8565b604051610039604082610271565b600c81526b185c1c0b58dbdb9d1c9858dd60a21b602082015260405190610061604083610271565b60058252640302e312e360dc1b60208301523060805260405190610086606083610271565b602182527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020830152601d60fa1b60408301526020610105604051936100ce604086610271565b60058552640302e302e360dc1b8386015261011760405195869384936327a0d66960e01b85526040600486015260448501906102c7565b838103600319016024850152906102c7565b03816001600160a01b0388165afa9384156102625761014f94610147935f91610233575b5060a05260c0526102eb565b60e0526102eb565b610100525f51602061257c5f395f51905f525460ff8160401c16610224576002600160401b03196001600160401b038216016101ce575b60405161223c908161034082396080518181816102db0152610418015260a05181611ac6015260c05181505060e05181818161031e0152610aeb01526101005181610b2f0152f35b6001600160401b0319166001600160401b039081175f51602061257c5f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610186565b63f92ee8a960e01b5f5260045ffd5b610255915060203d60201161025b575b61024d8183610271565b8101906102a8565b5f61013b565b503d610243565b6040513d5f823e3d90fd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761029457604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261026d57516001600160a01b038116810361026d5790565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b601f815111610316576020815191015160208210610307571790565b5f198260200360031b1b161790565b60405163305a27a960e01b81526020600482015290819061033b9060248301906102c7565b0390fdfe60806040526004361015610015575b366112d757005b5f3560e01c8063045ffa79146100d45780634f1ef286146100cf57806352d1902d146100ca57806354fd4d50146100c55780635c60da1b146100c057806371c12d08146100bb57806379502c55146100b657806379f512f3146100b15780637c5bdc19146100ac578063ad3cb1cc146100a7578063ce30981c146100a25763ebebcab70361000e57610a0a565b610905565b610856565b6107c3565b6105fc565b610570565b6104ac565b610478565b61045d565b610406565b61029a565b610130565b5f9103126100e357565b5f80fd5b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b51602080835261011c9201906100e7565b90565b90602061011c92818152019061010b565b346100e3575f3660031901126100e35761015f61014b610add565b60405191829160208352602083019061010b565b0390f35b6001600160a01b038116036100e357565b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b038211176101a357604052565b610174565b606081019081106001600160401b038211176101a357604052565b602081019081106001600160401b038211176101a357604052565b90601f801991011681019081106001600160401b038211176101a357604052565b6040519061020e6040836101de565b565b6040519061020e6020836101de565b6040519061020e6060836101de565b6001600160401b0381116101a357601f01601f191660200190565b9291926102558261022e565b9161026360405193846101de565b8294818452818301116100e3578281602093845f960137010152565b9080601f830112156100e35781602061011c93359101610249565b60403660031901126100e3576004356102b281610163565b6024356001600160401b0381116100e3576102d190369060040161027f565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163081149081156103e4575b506103d557813b1561039b5761038b916103506103427f00000000000000000000000000000000000000000000000000000000000000006113c0565b61034a6113fe565b906120c7565b1561038d5761038661037f610373610366612111565b546001600160a01b031690565b6001600160a01b031690565b3314610b53565b611422565b005b61038661037f610373611b5b565b60405162461bcd60e51b81526020600482015260126024820152712727aa2fa4a6a82622a6a2a72a20aa24a7a760711b6044820152606490fd5b63703e46dd60e11b5f5260045ffd5b5f5160206121c75f395f51905f52546001600160a01b0316141590505f610306565b346100e3575f3660031901126100e3577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036103d55760206040515f5160206121c75f395f51905f528152f35b346100e3575f3660031901126100e35761015f61014b610b21565b346100e3575f3660031901126100e3575f5160206121c75f395f51905f52546040516001600160a01b039091168152602090f35b346100e35760203660031901126100e3576004356001600160401b0381116100e35780600401606060031983360301126100e357602461056b9161056561054b61055d61038b9661052460018060a01b03604061050836611575565b015151166001600160a01b0361051c612111565b541614610b53565b6105556105318680610b68565b9490966105416044850182610b68565b9990940190610b68565b9690943691610249565b953691610249565b923691610249565b91611805565b61196d565b346100e3575f3660031901126100e357610588610b9a565b506105da6105946119c8565b600361059e6119c8565b01546105b5604051926105b084610188565b610beb565b82526020820190815260405192839260208452516040602085015260608401906100e7565b905160408301520390f35b6001600160401b0381116101a35760051b60200190565b346100e35760203660031901126100e3576004356001600160401b0381116100e357606060031982360301126100e35760405190610639826101a8565b806004013561064781610163565b825260248101356001600160401b0381116100e35761066c906004369184010161027f565b60208301526044810135906001600160401b0382116100e3570190366023830112156100e3576004820135916106a1836105e5565b906106af60405192836101de565b838252602060048184019560051b83010101903682116100e35760248101945b8286106106e55761038b85856040820152610c89565b85356001600160401b0381116100e3576004908301016060601f1982360301126100e35760405191610716836101a8565b60208201356001600160401b0381116100e357610739906020369185010161027f565b835260408201356001600160401b0381116100e35761075e906020369185010161027f565b60208401526060820135926001600160401b0384116100e35761078a602094938580953692010161027f565b60408201528152019501946106cf565b9060206107b083516040845260408401906100e7565b928101516001600160a01b031691015290565b346100e35760203660031901126100e3576004356001600160401b0381116100e3576107f661015f91369060040161027f565b6107fe610b9a565b506001600160a01b0361081b60016108146119c8565b01836111ab565b54166040519161082a83610188565b8252602082015260405191829160208352602083019061079a565b90602061011c9281815201906100e7565b346100e3575f3660031901126100e35761015f6040516108776040826101de565b60058152640352e302e360dc1b60208201526040519182916020835260208301906100e7565b602081526040810191519160208083015282518091526060820191602060608360051b8301019401925f915b8383106108d857505050505090565b90919293946020806108f6600193605f19868203018752895161079a565b970193019301919392906108c9565b346100e3575f3660031901126100e35761091d610aca565b506109266119c8565b60038101805490610936826105e5565b9261094460405194856101de565b828452601f19610953846105e5565b015f5b8181106109ed5750506001015f5b8381106109865761015f85610977610210565b9081526040519182918261089d565b80610993600192856111c8565b506109d16109ae610366866109a8868a6111c8565b506111dd565b6109bf6109b96101ff565b93610beb565b83526001600160a01b03166020830152565b6109db8288610fcc565b526109e68187610fcc565b5001610964565b6020906109fb959395610b9a565b82828901015201939193610956565b60203660031901126100e3576004356001600160401b0381116100e3578060040190608060031982360301126100e3576001600160a01b03610a4a611b5b565b163303610a98575f610a778192610a71610a648680610b68565b9190926044369101611262565b91611bea565b602081519101305af4610a8861129c565b9015610a9057005b602081519101fd5b60405162461bcd60e51b815260206004820152600a6024820152691393d517d2d15493915360b21b6044820152606490fd5b60405190610ad7826101c3565b60608252565b610ae5610aca565b50610b0f7f00000000000000000000000000000000000000000000000000000000000000006113c0565b60405190610b1c826101c3565b815290565b610b29610aca565b50610b0f7f00000000000000000000000000000000000000000000000000000000000000006113c0565b15610b5a57565b6282b42960e81b5f5260045ffd5b903590601e19813603018212156100e357018035906001600160401b0382116100e3576020019181360383136100e357565b60405190610ba782610188565b5f602083606081520152565b90600182811c92168015610be1575b6020831014610bcd57565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610bc2565b9060405191825f825492610bfe84610bb3565b8084529360018116908115610c675750600114610c23575b5061020e925003836101de565b90505f9291925260205f20905f915b818310610c4b57505090602061020e928201015f610c16565b6020919350806001915483858901015201910190918492610c32565b90506020925061020e94915060ff191682840152151560051b8201015f610c16565b5f5160206121e75f395f51905f5254906001600160401b03610cba604084901c60ff1615936001600160401b031690565b1680159081610dad575b6001149081610da3575b159081610d9a575b50610d8b57610d199082610d1060016001600160401b03195f5160206121e75f395f51905f525416175f5160206121e75f395f51905f5255565b610d6757610fe5565b610d1f57565b5f5160206121e75f395f51905f52805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b5f5160206121e75f395f51905f52805460ff60401b1916600160401b179055610fe5565b63f92ee8a960e01b5f5260045ffd5b9050155f610cd6565b303b159150610cce565b839150610cc4565b15610dbc57565b60405162461bcd60e51b8152602060048201526011602482015270105c1c081b985b59481c995c5d5a5c9959607a1b6044820152606490fd5b15610dfc57565b60405162461bcd60e51b8152602060048201526011602482015270417070206e616d6520746f6f206c6f6e6760781b6044820152606490fd5b601f8211610e4257505050565b5f5260205f20906020601f840160051c83019310610e7a575b601f0160051c01905b818110610e6f575050565b5f8155600101610e64565b9091508190610e5b565b91909182516001600160401b0381116101a357610eab81610ea58454610bb3565b84610e35565b6020601f8211600114610eea578190610edb9394955f92610edf575b50508160011b915f199060031b1c19161790565b9055565b015190505f80610ec7565b601f19821690610efd845f5260205f2090565b915f5b818110610f3757509583600195969710610f1f575b505050811b019055565b01515f1960f88460031b161c191690555f8080610f15565b9192602060018192868b015181550194019201610f00565b602080825282516001600160a01b031682820152919091015160408083015261011c91606001906100e7565b6040513d5f823e3d90fd5b90610f90826105e5565b610f9d60405191826101de565b8281528092610fae601f19916105e5565b0190602036910137565b634e487b7160e01b5f52603260045260245ffd5b8051821015610fe05760209160051b010190565b610fb8565b6020810190610ff78251511515610db5565b61100660408351511115610df5565b8051611034906001600160a01b031661102f611020610210565b6001600160a01b039092168252565b611a78565b61104761103f6119c8565b835190610e84565b61106061037361037361037361105b611b5b565b611b73565b81516001600160a01b031692516110876110786101ff565b6001600160a01b039095168552565b6020840152803b156100e357604051630853187160e31b8152925f9184918290849082906110b89060048301610f4f565b03925af19182156111945760409261117a575b5001906110d9825151610f86565b915f5b81519081518110156111415761113b6111226110fa83600195610fcc565b51516040611109858851610fcc565b5101516020611119868951610fcc565b51015191611805565b61112c8388610fcc565b6001600160a01b039091169052565b016110dc565b5050505f5b8251811015611175578061116f61056b61116260019487610fcc565b516001600160a01b031690565b01611146565b509050565b806111885f61118e936101de565b806100d9565b5f6110cb565b610f7b565b805191908290602001825e015f815290565b6020906111be9260405193848093611199565b9081520301902090565b8054821015610fe0575f5260205f2001905f90565b9060405180925f908054906111f182610bb3565b916001811690811561124a5750600114611214575b505060209281520301902090565b9091505f5260205f205f905b828210611233575050810160205f611206565b805482870152859350602090910190600101611220565b60ff191685525050801515028201905060205f611206565b91908260409103126100e35760405161127a81610188565b6020808294803561128a81610163565b845201359161129883610163565b0152565b3d156112c6573d906112ad8261022e565b916112bb60405193846101de565b82523d5f602084013e565b606090565b90815f8237015f815290565b6112df61206d565b5f80356001600160e01b031916808252602092909252604090206001600160a01b0390541690811561138a575b506001600160a01b03811615611347575f80916040518061132d81366112cb565b03915af461133961129c565b9015610a9057602081519101f35b60405162461bcd60e51b815260206004820152601b60248201527a111a585b5bdb990e88199d5b98dd1a5bdb881b9bdd08199bdd5b99602a1b6044820152606490fd5b6113b09150600161139961206d565b019063ffffffff60e01b165f5260205260405f2090565b546001600160a01b03165f61130c565b60ff811690601f82116113ef57604051916113dc6040846101de565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b6040519061140d6040836101de565b60068252651ad95c9b995b60d21b6020830152565b6040516352d1902d60e01b81529290916020846004816001600160a01b0387165afa5f94816114a2575b5061146d57634c9c8ce360e01b5f526001600160a01b03831660045260245ffd5b90915f5160206121c75f395f51905f52840361148e5761020e929350611c77565b632a87526960e21b5f52600484905260245ffd5b9094506020813d6020116114ce575b816114be602093836101de565b810103126100e35751935f61144c565b3d91506114b1565b604051906114e3826101a8565b815f81525f602082015260408051916114fb83610188565b5f83525f60208401520152565b634e487b7160e01b5f52601160045260245ffd5b906024820180921161152a57565b611508565b9190820180921161152a57565b9190820391821161152a57565b909392938483116100e35784116100e3578101920390565b906040828203126100e35761011c91611262565b61157d6114d6565b50611586611d19565b9060248110611635576001600160a01b036115b260036115a4612111565b01546001600160a01b031690565b1680156116305733036116355763beb2afbd60e01b3660031901356001600160e01b03191601611635573660231901356115eb8161151c565b821061163057611624918161161561160e61160861161c9561151c565b8461153c565b918261152f565b915f611549565b810190611561565b60018252604082015290565b505090565b5090565b1561164057565b60405162461bcd60e51b815260206004820152601760248201527610dbdb5c1bdb995b9d081b985b59481c995c5d5a5c9959604a1b6044820152606490fd5b1561168657565b60405162461bcd60e51b8152602060048201526017602482015276436f6d706f6e656e74206e616d6520746f6f206c6f6e6760481b6044820152606490fd5b9061020e611703926040519384917f496d706c656d656e746174696f6e206e6f7420666f756e6420666f72200000006020840152603d830190611199565b03601f1981018452836101de565b156117195750565b60405162461bcd60e51b81526020600482015290819061173d9060248301906100e7565b0390fd5b1561174857565b60405162461bcd60e51b815260206004820152601a602482015279496d706c656d656e746174696f6e20686173206e6f20636f646560301b6044820152606490fd5b908160209103126100e3575161011c81610163565b90916117b661011c9360408452604084019061010b565b9160208184039101526100e7565b6020815260606117df835182602085015260808401906100e7565b60208401516001600160a01b039081166040858101919091529094015190931691015290565b9061189c9261181683511515611639565b61182460408451111561167f565b60208161182f611b5b565b61183881611d3c565b9461187461184f8261184985611b73565b98611deb565b61186c61185b846116c5565b6001600160a01b0383161515611711565b3b1515611741565b61187c610210565b9081525f604051809981958294630c5945af60e31b84526004840161179f565b03926001600160a01b03165af1938415611194575f94611938575b506118c3908484611ec5565b6001600160a01b03166118d461021f565b9182526001600160a01b0383166020830152306040830152803b156100e357604051630c95767f60e01b8152915f91839182908490829061191890600483016117c4565b03925af180156111945761192a575090565b806111885f61011c936101de565b6118c391945061195f9060203d602011611966575b61195781836101de565b81019061178a565b93906118b7565b503d61194d565b611975611b5b565b6001600160a01b031690813b156100e357604051631118774360e21b81526001600160a01b039091166004820152905f908290602490829084905af18015611194576119be5750565b5f61020e916101de565b6040516119d66060826101de565b602281527f616e64726f6d6564612e73746f726167652e6170702e6170702d636f6e74726160208201526118dd60f21b6040820152604051611a2e81611a20602082018095611199565b03601f1981018352826101de565b5190205f19810190811161152a5760405190611a57826117036020820193849190602083019252565b9051902060ff191690565b611a729060405191828092611199565b03902090565b60ff5f5160206121e75f395f51905f525460401c1615611b4c57611aea60018060a01b038251166040519063a74e5ca560e01b6020830152602482015260248152611ac46044826101de565b7f00000000000000000000000000000000000000000000000000000000000000006120f4565b50611af3610add565b51611b1a611b14611b02610b21565b5193516001600160a01b031692611a62565b92611a62565b6001600160a01b03909116917f542e3741e19b27af9739b3c2fe67ae9fececcd04a33dcb48e178f0f664e502f65f80a4565b631afcd79f60e31b5f5260045ffd5b6001600160a01b036003611b6d612111565b01541690565b611b9b9060405190611b866040836101de565b600382526276667360e81b6020830152611fc3565b6001600160a01b03811615611bad5790565b60405162461bcd60e51b8152602060048201526015602482015274159194c81859191c995cdcc81b9bdd08199bdd5b99605a1b6044820152606490fd5b611a20611c40611c5e602461011c95966040519060018060a01b038151166020830152602060018060a01b0391015116604082015260408152611c2e6060826101de565b80516040519485926020840190611199565b90815263414d504360e01b60208201520360048101845201826101de565b60208560405196879583870137840101905f8252611199565b90813b15611cf8575f5160206121c75f395f51905f5280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a2805115611ce057611cdd916120f4565b50565b505034611ce957565b63b398979f60e01b5f5260045ffd5b50634c9c8ce360e01b5f9081526001600160a01b0391909116600452602490fd5b611d216114d6565b905f8252336020830152604082013381515260203391510152565b611d669060405190611d4f6040836101de565b600582526430b237b23160d91b6020830152611fc3565b6001600160a01b03811615611d785790565b60405162461bcd60e51b8152602060048201526017602482015276105113d110881859191c995cdcc81b9bdd08199bdd5b99604a1b6044820152606490fd5b9061020e6117039260405193849172020a227902727aa10282aa12624a9a422a21d1606d1b60208401526033830190611199565b90602060405180936335b41c4b60e11b82528180611e11856004830181815201876100e7565b03916001600160a01b03165afa918215611194575f92611e64575b506001600160a01b03821615611e40575090565b611e4c61173d91611db7565b60405162461bcd60e51b815291829160048301610845565b611e7e91925060203d6020116119665761195781836101de565b905f611e2c565b8054600160401b8110156101a357611ea2916001820181556111c8565b919091611eb25761020e91610e84565b634e487b7160e01b5f525f60045260245ffd5b9091611ecf6119c8565b60018101916001600160a01b03611ee684866111ab565b5416611f83576003820192603284541015611f45576002611f4093611f3461020e98611f15611f3b958a6111ab565b80546001600160a01b0319166001600160a01b03909216919091179055565b01856111ab565b610e84565b611e85565b60405162461bcd60e51b815260206004820152601660248201527513585e0818dbdb5c1bdb995b9d1cc81c995858da195960521b6044820152606490fd5b60405162461bcd60e51b8152602060048201526018602482015277436f6d706f6e656e7420616c72656164792065786973747360401b6044820152606490fd5b6001600160a01b0316801561202d57611fff91602091611fe1610210565b918252604051808095819463fd7687ef60e01b83526004830161011f565b03915afa908115611194575f91612014575090565b61011c915060203d6020116119665761195781836101de565b60405162461bcd60e51b815260206004820152601860248201527712d95c9b995b081859191c995cdcc81b9bdd08199bdd5b9960421b6044820152606490fd5b60405161207b6060826101de565b602481527f616e64726f6d6564612e73746f726167652e7374642e6d73672e7369676e61746020820152637572657360e01b6040820152604051611a2e81611a20602082018095611199565b90815181519081811493846120de575b5050505090565b602092939450820120920120145f8080806120d7565b5f8061011c93602081519101845af461210b61129c565b91612168565b60405161211f6060826101de565b602181527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020820152601d60fa1b6040820152604051611a2e81611a20602082018095611199565b9061218c575080511561217d57602081519101fd5b63d6bda27560e01b5f5260045ffd5b815115806121bd575b61219d575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561219556fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212202621579d30c40d300478a0628ac920335392b33b84cc90f86d8314d8034a794c64736f6c634300081e0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00";

type AppContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AppContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AppContract__factory extends ContractFactory {
  constructor(...args: AppContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(libraryAddress, overrides || {});
  }
  override deploy(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(libraryAddress, overrides || {}) as Promise<
      AppContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AppContract__factory {
    return super.connect(runner) as AppContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AppContractInterface {
    return new Interface(_abi) as AppContractInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): AppContract {
    return new Contract(address, _abi, runner) as unknown as AppContract;
  }
}
