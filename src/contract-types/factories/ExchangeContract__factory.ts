/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../common";
import type {
  ExchangeContract,
  ExchangeContractInterface,
} from "../ExchangeContract";

const _abi = [
  {
    type: "constructor",
    inputs: [
      {
        name: "libraryAddress",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "nonpayable",
  },
  {
    type: "fallback",
    stateMutability: "payable",
  },
  {
    type: "receive",
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "UPGRADE_INTERFACE_VERSION",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "string",
        internalType: "string",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "add_funds_erc20",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "add_funds_erc20_dynamic",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "dynamic_exchange_rate",
        type: "tuple",
        internalType: "struct IExchangeContract.DynamicExchangeRate",
        components: [
          {
            name: "max_inflow_amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "add_funds_native",
    inputs: [],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "add_funds_native_dynamic",
    inputs: [
      {
        name: "dynamic_exchange_rate",
        type: "tuple",
        internalType: "struct IExchangeContract.DynamicExchangeRate",
        components: [
          {
            name: "max_inflow_amount",
            type: "uint256",
            internalType: "uint256",
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "ado_type",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.AdoTypeResponse",
        components: [
          {
            name: "ado_type",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "ampReceive",
    inputs: [
      {
        name: "packet",
        type: "tuple",
        internalType: "struct AmpMsgLib.AmpPkt",
        components: [
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
          {
            name: "funds",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "ctx",
            type: "tuple",
            internalType: "struct AmpMsgLib.AmpPktCtx",
            components: [
              {
                name: "origin",
                type: "address",
                internalType: "address",
              },
              {
                name: "previous_sender",
                type: "address",
                internalType: "address",
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "buy_with_erc20",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "buy_with_erc20_with_recipient",
    inputs: [
      {
        name: "amount",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "recipient",
        type: "tuple",
        internalType: "struct RecipientLib.Recipient",
        components: [
          {
            name: "recipient",
            type: "string",
            internalType: "string",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "buy_with_native",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "buy_with_native_with_recipient",
    inputs: [
      {
        name: "recipient",
        type: "tuple",
        internalType: "struct RecipientLib.Recipient",
        components: [
          {
            name: "recipient",
            type: "string",
            internalType: "string",
          },
          {
            name: "message",
            type: "bytes",
            internalType: "bytes",
          },
        ],
      },
    ],
    outputs: [
      {
        name: "",
        type: "uint256",
        internalType: "uint256",
      },
    ],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "cancel_sale",
    inputs: [],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "config",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IExchangeContract.ConfigResponse",
        components: [
          {
            name: "from_asset",
            type: "tuple",
            internalType: "struct AssetLib.ResolvedAsset",
            components: [
              {
                name: "native",
                type: "string",
                internalType: "string",
              },
              {
                name: "smart",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "to_asset",
            type: "tuple",
            internalType: "struct AssetLib.ResolvedAsset",
            components: [
              {
                name: "native",
                type: "string",
                internalType: "string",
              },
              {
                name: "smart",
                type: "address",
                internalType: "address",
              },
            ],
          },
          {
            name: "exchange_rate_bps",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "exchanged_amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "amount",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "start_time",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "end_time",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "recipient",
            type: "tuple",
            internalType: "struct RecipientLib.Recipient",
            components: [
              {
                name: "recipient",
                type: "string",
                internalType: "string",
              },
              {
                name: "message",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "implementation",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "address",
        internalType: "address",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "initialize",
    inputs: [
      {
        name: "params",
        type: "tuple",
        internalType: "struct IExchangeContract.ExchangeContractInitParams",
        components: [
          {
            name: "owner",
            type: "address",
            internalType: "address",
          },
          {
            name: "from_asset",
            type: "tuple",
            internalType: "struct AssetLib.Asset",
            components: [
              {
                name: "native",
                type: "string",
                internalType: "string",
              },
              {
                name: "smart",
                type: "string",
                internalType: "string",
              },
            ],
          },
          {
            name: "to_asset",
            type: "tuple",
            internalType: "struct AssetLib.Asset",
            components: [
              {
                name: "native",
                type: "string",
                internalType: "string",
              },
              {
                name: "smart",
                type: "string",
                internalType: "string",
              },
            ],
          },
          {
            name: "recipient",
            type: "tuple",
            internalType: "struct RecipientLib.Recipient",
            components: [
              {
                name: "recipient",
                type: "string",
                internalType: "string",
              },
              {
                name: "message",
                type: "bytes",
                internalType: "bytes",
              },
            ],
          },
          {
            name: "exchange_rate_bps",
            type: "uint256",
            internalType: "uint256",
          },
          {
            name: "schedule",
            type: "tuple",
            internalType: "struct ScheduleLib.Schedule",
            components: [
              {
                name: "start",
                type: "tuple",
                internalType: "struct ScheduleLib.Expiry",
                components: [
                  {
                    name: "from_now",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "at_time",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "infinite",
                    type: "bool",
                    internalType: "bool",
                  },
                ],
              },
              {
                name: "end",
                type: "tuple",
                internalType: "struct ScheduleLib.Expiry",
                components: [
                  {
                    name: "from_now",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "at_time",
                    type: "uint256",
                    internalType: "uint256",
                  },
                  {
                    name: "infinite",
                    type: "bool",
                    internalType: "bool",
                  },
                ],
              },
            ],
          },
        ],
      },
    ],
    outputs: [],
    stateMutability: "nonpayable",
  },
  {
    type: "function",
    name: "proxiableUUID",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
    stateMutability: "view",
  },
  {
    type: "function",
    name: "upgradeToAndCall",
    inputs: [
      {
        name: "newImplementation",
        type: "address",
        internalType: "address",
      },
      {
        name: "data",
        type: "bytes",
        internalType: "bytes",
      },
    ],
    outputs: [],
    stateMutability: "payable",
  },
  {
    type: "function",
    name: "version",
    inputs: [],
    outputs: [
      {
        name: "",
        type: "tuple",
        internalType: "struct IContractBase.VersionResponse",
        components: [
          {
            name: "version",
            type: "string",
            internalType: "string",
          },
        ],
      },
    ],
    stateMutability: "view",
  },
  {
    type: "event",
    name: "AdoDefaultInitialized",
    inputs: [
      {
        name: "adoType",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "version",
        type: "string",
        indexed: true,
        internalType: "string",
      },
      {
        name: "adoOwner",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Initialized",
    inputs: [
      {
        name: "version",
        type: "uint64",
        indexed: false,
        internalType: "uint64",
      },
    ],
    anonymous: false,
  },
  {
    type: "event",
    name: "Upgraded",
    inputs: [
      {
        name: "implementation",
        type: "address",
        indexed: true,
        internalType: "address",
      },
    ],
    anonymous: false,
  },
  {
    type: "error",
    name: "AddressEmptyCode",
    inputs: [
      {
        name: "target",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967InvalidImplementation",
    inputs: [
      {
        name: "implementation",
        type: "address",
        internalType: "address",
      },
    ],
  },
  {
    type: "error",
    name: "ERC1967NonPayable",
    inputs: [],
  },
  {
    type: "error",
    name: "FailedCall",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidInitialization",
    inputs: [],
  },
  {
    type: "error",
    name: "InvalidShortString",
    inputs: [],
  },
  {
    type: "error",
    name: "NotInitializing",
    inputs: [],
  },
  {
    type: "error",
    name: "StringTooLong",
    inputs: [
      {
        name: "str",
        type: "string",
        internalType: "string",
      },
    ],
  },
  {
    type: "error",
    name: "StringsInsufficientHexLength",
    inputs: [
      {
        name: "value",
        type: "uint256",
        internalType: "uint256",
      },
      {
        name: "length",
        type: "uint256",
        internalType: "uint256",
      },
    ],
  },
  {
    type: "error",
    name: "UUPSUnauthorizedCallContext",
    inputs: [],
  },
  {
    type: "error",
    name: "UUPSUnsupportedProxiableUUID",
    inputs: [
      {
        name: "slot",
        type: "bytes32",
        internalType: "bytes32",
      },
    ],
  },
  {
    type: "error",
    name: "Unauthorized",
    inputs: [],
  },
] as const;

const _bytecode =
  "0x61012080604052346102695761002b906129218038038091610021828561026d565b83398101906102a4565b60405161003960408261026d565b600881526765786368616e676560c01b60208201526040519061005d60408361026d565b60058252640302e312e360dc1b6020830152306080526040519061008260608361026d565b602182527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020830152601d60fa1b60408301526020610101604051936100ca60408661026d565b60058552640302e302e360dc1b8386015261011360405195869384936327a0d66960e01b85526040600486015260448501906102c3565b838103600319016024850152906102c3565b03816001600160a01b0388165afa93841561025e5761014b94610143935f9161022f575b5060a05260c0526102e7565b60e0526102e7565b610100525f5160206129015f395f51905f525460ff8160401c16610220576002600160401b03196001600160401b038216016101ca575b6040516125c5908161033c82396080518181816103cf015261050c015260a05181611883015260c05181505060e0518181816104120152610b5001526101005181610b940152f35b6001600160401b0319166001600160401b039081175f5160206129015f395f51905f52556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a15f610182565b63f92ee8a960e01b5f5260045ffd5b610251915060203d602011610257575b610249818361026d565b8101906102a4565b5f610137565b503d61023f565b6040513d5f823e3d90fd5b5f80fd5b601f909101601f19168101906001600160401b0382119082101761029057604052565b634e487b7160e01b5f52604160045260245ffd5b9081602091031261026957516001600160a01b03811681036102695790565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b601f815111610312576020815191015160208210610303571790565b5f198260200360031b1b161790565b60405163305a27a960e01b8152602060048201529081906103379060248301906102c3565b0390fdfe60806040526004361015610015575b3661130057005b5f3560e01c8063045ffa79146101345780634c8297471461012f5780634f1ef2861461012a57806352d1902d1461012557806354fd4d50146101205780635c60da1b1461011b57806369c1d4a9146101165780636af15d04146101115780636ce14da61461010c57806379502c551461010757806397d1a5bc14610102578063ad3cb1cc146100fd578063b0ec64de146100f8578063cb435a84146100f3578063d5c72a2f146100ee578063dbb36849146100e9578063dd60a5a3146100e45763ebebcab70361000e57610a6f565b610a49565b610a1d565b6109e0565b6109aa565b610987565b610940565b6108f2565b610858565b610756565b610672565b6105a0565b61056c565b610551565b6104fa565b61038e565b610330565b610179565b805180835260209291819084018484015e5f828201840152601f01601f1916010190565b6040610176926020835251916020808201520190610139565b90565b346101a4575f3660031901126101a4576101a0610194610b42565b6040519182918261015d565b0390f35b5f80fd5b634e487b7160e01b5f52604160045260245ffd5b604081019081106001600160401b038211176101d757604052565b6101a8565b606081019081106001600160401b038211176101d757604052565b602081019081106001600160401b038211176101d757604052565b90601f801991011681019081106001600160401b038211176101d757604052565b6040519061024260c083610212565b565b6040519061024261010083610212565b60405190610242604083610212565b60405190610242602083610212565b6001600160401b0381116101d757601f01601f191660200190565b81601f820112156101a4576020813591016102a782610272565b926102b56040519485610212565b828452828201116101a457815f92602092838601378301015290565b91906040838203126101a457604051906102ea826101bc565b819380356001600160401b0381116101a4578261030891830161028d565b83526020810135916001600160401b0383116101a45760209261032b920161028d565b910152565b60403660031901126101a4576004356024356001600160401b0381116101a45760209161036461036a9236906004016102d1565b906114ac565b604051908152f35b6001600160a01b038116036101a457565b359061024282610372565b60403660031901126101a4576004356103a681610372565b6024356001600160401b0381116101a4576103c590369060040161028d565b6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000163081149081156104d8575b506104c957813b1561048f5761047f916104446104367f00000000000000000000000000000000000000000000000000000000000000006113e9565b61043e61153f565b906123b5565b156104815761047a61047361046761045a6123ff565b546001600160a01b031690565b6001600160a01b031690565b3314610bb8565b61156e565b005b61047a610473610467611c24565b60405162461bcd60e51b81526020600482015260126024820152712727aa2fa4a6a82622a6a2a72a20aa24a7a760711b6044820152606490fd5b63703e46dd60e11b5f5260045ffd5b5f5160206125505f395f51905f52546001600160a01b0316141590505f6103fa565b346101a4575f3660031901126101a4577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031630036104c95760206040515f5160206125505f395f51905f528152f35b346101a4575f3660031901126101a4576101a0610194610b86565b346101a4575f3660031901126101a4575f5160206125505f395f51905f52546040516001600160a01b039091168152602090f35b346101a4575f3660031901126101a4576105e26001600160a01b0360406105c636611680565b015151166001600160a01b036105da6123ff565b541614610bb8565b6105ea611756565b600a6105f4611808565b910155005b801515036101a457565b91908260609103126101a45760405161061b816101dc565b6040808294803584526020810135602085015201359161063a836105f9565b0152565b919060c0838203126101a457602061032b6040519261065c846101bc565b6060849661066a8382610603565b865201610603565b346101a45760203660031901126101a4576004356001600160401b0381116101a45761016060031982360301126101a4576106ab610233565b6106b782600401610383565b815260248201356001600160401b0381116101a4576106dc90600436918501016102d1565b602082015260448201356001600160401b0381116101a45761070490600436918501016102d1565b604082015260648201356001600160401b0381116101a45761047f9261073361074c92600436918401016102d1565b60608401526084810135608084015260a436910161063e565b60a0820152610bcd565b346101a45760203660031901126101a45761047f6004356040519061077a826101f7565b5f8252611aa4565b9060206107988351604084526040840190610139565b928101516001600160a01b031691015290565b6101769160206107c48351604084526040840190610139565b920151906020818403910152610139565b90610176916020815260e06108116107fb84516101006020860152610120850190610782565b6020850151848203601f19016040860152610782565b926040810151606084015260608101516080840152608081015160a084015260a081015160c084015260c081015182840152015190610100601f19828503019101526107ab565b346101a4575f3660031901126101a457610870611101565b506101a061087c611756565b6108e1600760048301549260058101546006820154600983015490600a840154926108a5610244565b976108af866111e0565b89526108bd600287016111e0565b60208a015260408901526060880152608087015260a086015260c08501520161121d565b60e0820152604051918291826107d5565b346101a45760403660031901126101a45760043560203660231901126101a45760405161047f91610922826101f7565b6024358252611aa4565b6040519061093b602083610212565b5f8252565b346101a4575f3660031901126101a4576101a0604051610961604082610212565b60058152640352e302e360dc1b6020820152604051918291602083526020830190610139565b5f3660031901126101a45761047f6040516109a1816101f7565b5f815234611aa4565b60203660031901126101a4576004356001600160401b0381116101a45761036a6109da60209236906004016102d1565b346114ac565b60203660031901126101a457602061036a600435610364610a07610a02611b3d565b611b57565b60405190610a158683610212565b5f8252611c03565b5f3660031901126101a457602061036a6109da610a3b610a02611b3d565b60405190610a158583610212565b60203660031901126101a45761047f604051610a64816101f7565b600435815234611aa4565b60203660031901126101a4576004356001600160401b0381116101a4578060040190608060031982360301126101a4576001600160a01b03610aaf611c24565b163303610afd575f610adc8192610ad6610ac9868061125d565b919092604436910161128f565b91611c3c565b602081519101305af4610aed6112c5565b9015610af557005b602081519101fd5b60405162461bcd60e51b815260206004820152600a6024820152691393d517d2d15493915360b21b6044820152606490fd5b60405190610b3c826101f7565b60608252565b610b4a610b2f565b50610b747f00000000000000000000000000000000000000000000000000000000000000006113e9565b60405190610b81826101f7565b815290565b610b8e610b2f565b50610b747f00000000000000000000000000000000000000000000000000000000000000006113e9565b15610bbf57565b6282b42960e81b5f5260045ffd5b5f5160206125705f395f51905f5254906001600160401b03610bfe604084901c60ff1615936001600160401b031690565b1680159081610cf1575b6001149081610ce7575b159081610cde575b50610ccf57610c5d9082610c5460016001600160401b03195f5160206125705f395f51905f525416175f5160206125705f395f51905f5255565b610cab5761102d565b610c6357565b5f5160206125705f395f51905f52805460ff60401b19169055604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d290602090a1565b5f5160206125705f395f51905f52805460ff60401b1916600160401b17905561102d565b63f92ee8a960e01b5f5260045ffd5b9050155f610c1a565b303b159150610c12565b839150610c08565b90600182811c92168015610d27575b6020831014610d1357565b634e487b7160e01b5f52602260045260245ffd5b91607f1691610d08565b601f8211610d3e57505050565b5f5260205f20906020601f840160051c83019310610d76575b601f0160051c01905b818110610d6b575050565b5f8155600101610d60565b9091508190610d57565b91909182519283516001600160401b0381116101d757610daa81610da48554610cf9565b85610d31565b6020601f8211600114610e2257600192610de583610df694602094610242999a5f92610e17575b50508160011b915f199060031b1c19161790565b85555b01516001600160a01b031690565b910180546001600160a01b0319166001600160a01b03909216919091179055565b015190505f80610dd1565b601f19821695610e35855f5260205f2090565b965f5b818110610e7e575083610242979860209460019794610df697899510610e66575b505050811b018555610de8565b01515f1960f88460031b161c191690555f8080610e59565b83830151895560019098019760209384019301610e38565b91909182516001600160401b0381116101d757610ebd81610eb78454610cf9565b84610d31565b6020601f8211600114610ef0578190610eec9394955f92610e175750508160011b915f199060031b1c19161790565b9055565b601f19821690610f03845f5260205f2090565b915f5b818110610f3d57509583600195969710610f25575b505050811b019055565b01515f1960f88460031b161c191690555f8080610f1b565b9192602060018192868b015181550194019201610f06565b91909182519283516001600160401b0381116101d757610f7981610da48554610cf9565b6020601f8211600114610fbc5791610fb08260209360019561024298995f92610e175750508160011b915f199060031b1c19161790565b84555b01519101610e96565b601f19821695610fcf855f5260205f2090565b965f5b81811061101557509261024296976001959386938360209710610ffd575b505050811b018455610fb3565b01515f1960f88460031b161c191690555f8080610ff0565b83830151895560019098019760209384019301610fd2565b805160405161105e91611059906001600160a01b031661104c836101f7565b6001600160a01b03168252565b611835565b60096110c560a061106d611756565b9361108461107e6020830151611918565b86610d80565b61109d6110946040830151611918565b60028701610d80565b6110ae606082015160078701610f55565b608081015160048601555f60058601550151611a32565b600a840155910155565b604051906110dc826101bc565b5f602083606081520152565b604051906110f5826101bc565b60606020838281520152565b6040519061010082018281106001600160401b038211176101d757604052816111286110cf565b81526111326110cf565b60208201525f60408201525f60608201525f60808201525f60a08201525f60c082015260e061032b6110e8565b5f929181549161116e83610cf9565b80835292600181169081156111c3575060011461118a57505050565b5f9081526020812093945091925b8383106111a9575060209250010190565b600181602092949394548385870101520191019190611198565b915050602093945060ff929192191683830152151560051b010190565b906040516111ed816101bc565b6020819360405161120981611202818561115f565b0382610212565b8352600101546001600160a01b0316910152565b906001602060405161122e816101bc565b61063a819560405161124481611202818561115f565b8352611256604051809681930161115f565b0384610212565b903590601e19813603018212156101a457018035906001600160401b0382116101a4576020019181360383136101a457565b91908260409103126101a4576040516112a7816101bc565b602080829480356112b781610372565b845201359161063a83610372565b3d156112ef573d906112d682610272565b916112e46040519384610212565b82523d5f602084013e565b606090565b90815f8237015f815290565b611308612347565b5f80356001600160e01b031916808252602092909252604090206001600160a01b039054169081156113b3575b506001600160a01b03811615611370575f80916040518061135681366112f4565b03915af46113626112c5565b9015610af557602081519101f35b60405162461bcd60e51b815260206004820152601b60248201527a111a585b5bdb990e88199d5b98dd1a5bdb881b9bdd08199bdd5b99602a1b6044820152606490fd5b6113d9915060016113c2612347565b019063ffffffff60e01b165f5260205260405f2090565b546001600160a01b03165f611335565b60ff811690601f82116114185760405191611405604084610212565b6020808452838101919036833783525290565b632cd44ac360e21b5f5260045ffd5b634e487b7160e01b5f52601160045260245ffd5b90612710820291808304612710149015171561145357565b611427565b8115611462570490565b634e487b7160e01b5f52601260045260245ffd5b906024820180921161145357565b906001820180921161145357565b9190820180921161145357565b9190820391821161145357565b906114b5611756565b906114c8836114c3846111e0565b611d5f565b600482015490818402918483041484151715611453576115066127106115189304946114f3856111e0565b906115006007870161121d565b91611e91565b83611513600285016111e0565b611e91565b60058101908154838101809111611453576006925501805490828203918211611453575590565b6040519061154e604083610212565b60068252651ad95c9b995b60d21b6020830152565b6040513d5f823e3d90fd5b6040516352d1902d60e01b81529290916020846004816001600160a01b0387165afa5f94816115ee575b506115b957634c9c8ce360e01b5f526001600160a01b03831660045260245ffd5b90915f5160206125505f395f51905f5284036115da57610242929350611fcd565b632a87526960e21b5f52600484905260245ffd5b9094506020813d60201161161a575b8161160a60209383610212565b810103126101a45751935f611598565b3d91506115fd565b6040519061162f826101dc565b815f81525f60208201526040805191611647836101bc565b5f83525f60208401520152565b909392938483116101a45784116101a4578101920390565b906040828203126101a4576101769161128f565b611688611622565b5061169161206f565b9060248110611740576001600160a01b036116bd60036116af6123ff565b01546001600160a01b031690565b16801561173b5733036117405763beb2afbd60e01b3660031901356001600160e01b03191601611740573660231901356116f681611476565b821061173b5761172f918161172061171961171361172795611476565b8461149f565b9182611492565b915f611654565b81019061166c565b60018252604082015290565b505090565b5090565b805191908290602001825e015f815290565b604051611764606082610212565b602c81527f616e64726f6d6564612e73746f726167652e65786368616e67652e657863686160208201526b1b99d94b58dbdb9d1c9858dd60a21b60408201526040516117c6816117b8602082018095611744565b03601f198101835282610212565b5190205f19810190811161145357604051906117fd826117ef6020820193849190602083019252565b03601f198101845283610212565b9051902060ff191690565b6103e842024281046103e814421517156114535790565b61182f9060405191828092611744565b03902090565b60ff5f5160206125705f395f51905f525460401c1615611909576118a760018060a01b038251166040519063a74e5ca560e01b6020830152602482015260248152611881604482610212565b7f00000000000000000000000000000000000000000000000000000000000000006123e2565b506118b0610b42565b516118d76118d16118bf610b86565b5193516001600160a01b03169261181f565b9261181f565b6001600160a01b03909116917f542e3741e19b27af9739b3c2fe67ae9fececcd04a33dcb48e178f0f664e502f65f80a4565b631afcd79f60e31b5f5260045ffd5b6119206110cf565b5080515115801560208301918251511515908290611a2b575b156119f657816119ee575b506119a9578151516119935761196d9150611965611960611c24565b612092565b9051906121d4565b610176611978610254565b9161198161092c565b83526001600160a01b03166020830152565b505161199d610254565b9081525f602082015290565b60405162461bcd60e51b815260206004820152601f60248201527f43414e4e4f545f42455f424f54485f4e41544956455f414e445f534d415254006044820152606490fd5b90505f611944565b60405162461bcd60e51b815260206004820152600d60248201526c1253959053125117d054d4d155609a1b6044820152606490fd5b5080611939565b90611a56602092611a4c8151611a46611808565b9061227f565b938491015161227f565b9182811015611a63579190565b60405162461bcd60e51b815260206004820152601960248201527853544152545f54494d455f41465445525f454e445f54494d4560381b6044820152606490fd5b611aac611756565b600a810154611ab9611808565b1015611b0b576002816102429460066114c3940190611ad9868354611492565b82558051611aea575b5050016111e0565b611af7611aff925461143b565b905190611458565b60048201555f80611ae2565b60405162461bcd60e51b815260206004820152600a60248201526914d0531157d15391115160b21b6044820152606490fd5b6001600160a01b036040611b5036611680565b0151511690565b6001600160a01b031680611b6b602a6122c7565b916030611b778461230d565b536078611b838461231a565b53611b8e6028611484565b60018111611bb65750611b9f575090565b63e22e27eb60e01b5f52600452601460245260445ffd5b90600f81166010811015611bfe57611bf991611bf3916f181899199a1a9b1b9c1cb0b131b232b360811b901a611bec858861232a565b5360041c90565b9161233b565b611b8e565b6122f9565b90611c0c6110e8565b5060405191611c1a836101bc565b8252602082015290565b6001600160a01b036003611c366123ff565b01541690565b6117b8611c92611cb0602461017695966040519060018060a01b038151166020830152602060018060a01b0391015116604082015260408152611c80606082610212565b80516040519485926020840190611744565b90815263414d504360e01b6020820152036004810184520182610212565b60208560405196879583870137840101905f8252611744565b15611cd057565b60405162461bcd60e51b815260206004820152600f60248201526e0829a9eaa9ca8be9a92a69a82a8869608b1b6044820152606490fd5b908160209103126101a45751610176816105f9565b15611d2357565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d19493d357d1905253115160621b6044820152606490fd5b60208101516001600160a01b031615611e2357602090810151611dd49290611d8f906001600160a01b0316610467565b611d97611b3d565b6040516323b872dd60e01b81526001600160a01b0390911660048201523060248201526044810192909252909283919082905f9082906064820190565b03925af18015611e1e57610242915f91611def575b50611d1c565b611e11915060203d602011611e17575b611e098183610212565b810190611d07565b5f611de9565b503d611dff565b611563565b50610242903414611cc9565b15611e3657565b60405162461bcd60e51b815260206004820152600f60248201526e1514905394d1915497d19052531151608a1b6044820152606490fd5b610176939260609260018060a01b0316825260208201528160408201520190610139565b90611e9c83516123a1565b60208301519093906001600160a01b031615611f925760200180515190929015611f015791611dd493915f611ee161046761046760208098015160018060a01b031690565b9251604051630200057560e51b8152968795869485939160048501611e6d565b602090810151611f5894919350611f2290610467906001600160a01b031681565b60405163a9059cbb60e01b81526001600160a01b03909216600483015260248201929092529283919082905f9082906044820190565b03925af18015611e1e57610242915f91611f73575b50611e2f565b611f8c915060203d602011611e1757611e098183610212565b5f611f6d565b5f9390849350602090611fa6843414611cc9565b01518051926020909101916001600160a01b03165af1611fc46112c5565b9015610af55750565b90813b1561204e575f5160206125505f395f51905f5280546001600160a01b0319166001600160a01b0384169081179091557fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b5f80a280511561203657612033916123e2565b50565b50503461203f57565b63b398979f60e01b5f5260045ffd5b50634c9c8ce360e01b5f9081526001600160a01b0391909116600452602490fd5b612077611622565b905f8252336020830152604082013381515260203391510152565b6040908151906120a28383610212565b600382526276667360e81b60208301526001600160a01b03168015612180576120ee92916020916120d1610263565b9182528351808096819463fd7687ef60e01b83526004830161015d565b03915afa918215611e1e575f9261214f575b506001600160a01b03821615612114575090565b5162461bcd60e51b8152602060048201526015602482015274159194c81859191c995cdcc81b9bdd08199bdd5b99605a1b6044820152606490fd5b61217291925060203d602011612179575b61216a8183610212565b8101906121bf565b905f612100565b503d612160565b825162461bcd60e51b815260206004820152601860248201527712d95c9b995b081859191c995cdcc81b9bdd08199bdd5b9960421b6044820152606490fd5b908160209103126101a4575161017681610372565b6121fc91602091604051808095819463c92557a760e01b835286600484018181520190610139565b03916001600160a01b03165afa908115611e1e575f91612260575b506001600160a01b0381161561222a5790565b60405162461bcd60e51b815260206004820152600e60248201526d14105512081393d5081193d5539160921b6044820152606490fd5b612279915060203d6020116121795761216a8183610212565b5f612217565b8161228991612456565b9081106122935790565b60405162461bcd60e51b815260206004820152600c60248201526b1512535157d156141254915160a21b6044820152606490fd5b906122d182610272565b6122de6040519182610212565b82815280926122ef601f1991610272565b0190602036910137565b634e487b7160e01b5f52603260045260245ffd5b805115611bfe5760200190565b805160011015611bfe5760210190565b908151811015611bfe570160200190565b8015611453575f190190565b604051612355606082610212565b602481527f616e64726f6d6564612e73746f726167652e7374642e6d73672e7369676e61746020820152637572657360e01b60408201526040516117c6816117b8602082018095611744565b610176906123b0611960611c24565b6121d4565b90815181519081811493846123cc575b5050505090565b602092939450820120920120145f8080806123c5565b5f8061017693602081519101845af46123f96112c5565b916124f1565b60405161240d606082610212565b602181527f616e64726f6d6564612e73746f726167652e7374642e61646f2e64656661756c6020820152601d60fa1b60408201526040516117c6816117b8602082018095611744565b9060408201516124ea5781511515806124dd575b61248c5760208201918251156124805750505190565b61017692505190611492565b60405162461bcd60e51b815260206004820152602360248201527f43414e4e4f545f42455f424f54485f46524f4d5f4e4f575f414e445f41545f54604482015262494d4560e81b6064820152608490fd5b506020820151151561246a565b50505f1990565b90612515575080511561250657602081519101fd5b63d6bda27560e01b5f5260045ffd5b81511580612546575b612526575090565b639996b31560e01b5f9081526001600160a01b0391909116600452602490fd5b50803b1561251e56fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbcf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00a26469706673582212203afb3582fc98786f780a32e82b8fc417175bf2b53cc7b5230fcd825415311cac64736f6c634300081c0033f0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00";

type ExchangeContractConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExchangeContractConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExchangeContract__factory extends ContractFactory {
  constructor(...args: ExchangeContractConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(libraryAddress, overrides || {});
  }
  override deploy(
    libraryAddress: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(libraryAddress, overrides || {}) as Promise<
      ExchangeContract & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ExchangeContract__factory {
    return super.connect(runner) as ExchangeContract__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExchangeContractInterface {
    return new Interface(_abi) as ExchangeContractInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ExchangeContract {
    return new Contract(address, _abi, runner) as unknown as ExchangeContract;
  }
}
